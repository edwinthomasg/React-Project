[{"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/index.js":"1","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/App.js":"2","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/Header.js":"3","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/Router.js":"4","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminBookings.js":"5","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminHeader.js":"6","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminLogin.js":"7","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminHome.js":"8","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminMovies.js":"9","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminMyProfile.js":"10","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/Feedbacks.js":"11","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/Auth.js":"12","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/Bookings.js":"13","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/Movies.js":"14","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/Home.js":"15","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/MyProfile.js":"16","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/About.js":"17","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/UserHeader.js":"18","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/EditProfile.js":"19","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminEditProfile.js":"20","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/movie/AboutMovie.js":"21","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/movie/MovieCard.js":"22","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/movie/MovieDisplay.js":"23","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/movie/AboutMovieAdmin.js":"24","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/movie/EditMovie.js":"25","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/movie/Carousel.js":"26","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/show/Shows.js":"27","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/BookCards.js":"28","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminBookCard.js":"29","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/movie/SeatDisplay.js":"30","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/ActionTypes.js":"31","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/ShowActions.js":"32","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/UserActions.js":"33","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/AdminActions.js":"34","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/MovieActions.js":"35","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/SignupActions.js":"36","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/Store.js":"37","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/RootReducer.js":"38","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/SignUpReducer.js":"39","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/ShowReducer.js":"40","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/UserReducer.js":"41","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/BookReducer.js":"42","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/AdminReducer.js":"43","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/MovieReducer.js":"44","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/styles/styles.js":"45","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/ProtectComponent.js":"46","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/api/BaseUrl.js":"47","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/BookActions.js":"48","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/api/Interceptors.js":"49"},{"size":440,"mtime":1657702806973,"results":"50","hashOfConfig":"51"},{"size":749,"mtime":1657687354718,"results":"52","hashOfConfig":"51"},{"size":401,"mtime":1657694716387,"results":"53","hashOfConfig":"51"},{"size":2931,"mtime":1657709267874,"results":"54","hashOfConfig":"51"},{"size":740,"mtime":1657711903719,"results":"55","hashOfConfig":"51"},{"size":3072,"mtime":1657710946761,"results":"56","hashOfConfig":"51"},{"size":1707,"mtime":1657560723004,"results":"57","hashOfConfig":"51"},{"size":764,"mtime":1657475257303,"results":"58","hashOfConfig":"51"},{"size":2868,"mtime":1657522348054,"results":"59","hashOfConfig":"51"},{"size":1307,"mtime":1657709293842,"results":"60","hashOfConfig":"51"},{"size":143,"mtime":1657002810255,"results":"61","hashOfConfig":"51"},{"size":6563,"mtime":1657696656380,"results":"62","hashOfConfig":"51"},{"size":776,"mtime":1657639374162,"results":"63","hashOfConfig":"51"},{"size":737,"mtime":1657694702225,"results":"64","hashOfConfig":"51"},{"size":683,"mtime":1657252429955,"results":"65","hashOfConfig":"51"},{"size":1238,"mtime":1657529143725,"results":"66","hashOfConfig":"51"},{"size":105,"mtime":1657475324715,"results":"67","hashOfConfig":"51"},{"size":3403,"mtime":1657710533640,"results":"68","hashOfConfig":"51"},{"size":2582,"mtime":1657694687126,"results":"69","hashOfConfig":"51"},{"size":2422,"mtime":1657707456666,"results":"70","hashOfConfig":"51"},{"size":1492,"mtime":1657694429984,"results":"71","hashOfConfig":"51"},{"size":1931,"mtime":1657519141282,"results":"72","hashOfConfig":"51"},{"size":1641,"mtime":1657223517288,"results":"73","hashOfConfig":"51"},{"size":1778,"mtime":1657694419348,"results":"74","hashOfConfig":"51"},{"size":3638,"mtime":1657694452872,"results":"75","hashOfConfig":"51"},{"size":721,"mtime":1657203310807,"results":"76","hashOfConfig":"51"},{"size":1648,"mtime":1657560859102,"results":"77","hashOfConfig":"51"},{"size":1769,"mtime":1657714259623,"results":"78","hashOfConfig":"51"},{"size":1966,"mtime":1657711656665,"results":"79","hashOfConfig":"51"},{"size":8006,"mtime":1657632474405,"results":"80","hashOfConfig":"51"},{"size":1177,"mtime":1657711254387,"results":"81","hashOfConfig":"51"},{"size":1311,"mtime":1657694638949,"results":"82","hashOfConfig":"51"},{"size":2886,"mtime":1657701292771,"results":"83","hashOfConfig":"51"},{"size":2060,"mtime":1657707393165,"results":"84","hashOfConfig":"51"},{"size":1660,"mtime":1657703696977,"results":"85","hashOfConfig":"51"},{"size":358,"mtime":1657519281372,"results":"86","hashOfConfig":"51"},{"size":349,"mtime":1657697431853,"results":"87","hashOfConfig":"51"},{"size":783,"mtime":1657612168432,"results":"88","hashOfConfig":"51"},{"size":495,"mtime":1657529378557,"results":"89","hashOfConfig":"51"},{"size":1114,"mtime":1657631925572,"results":"90","hashOfConfig":"51"},{"size":1624,"mtime":1657622917837,"results":"91","hashOfConfig":"51"},{"size":461,"mtime":1657363132606,"results":"92","hashOfConfig":"51"},{"size":1279,"mtime":1657707362536,"results":"93","hashOfConfig":"51"},{"size":448,"mtime":1657703835897,"results":"94","hashOfConfig":"51"},{"size":887,"mtime":1656599299331,"results":"95","hashOfConfig":"51"},{"size":616,"mtime":1657687212290,"results":"96","hashOfConfig":"51"},{"size":278,"mtime":1657638819530,"results":"97","hashOfConfig":"51"},{"size":1094,"mtime":1657711289487,"results":"98","hashOfConfig":"51"},{"size":799,"mtime":1657644621878,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"k133re",{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"103"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"103"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"103"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"103"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"103"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"103"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"103"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"103"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"103"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"103"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"103"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"103"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"103"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"103"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"103"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"103"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/index.js",[],[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/App.js",["264"],[],"import './App.css';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Header from './components/Header';\nimport Router from './components/Router';\nimport axios from 'axios'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { retrieveUserToken } from './components/redux/UserActions';\nimport { retrieveAdminToken } from './components/redux/AdminActions';\n\nfunction App() {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(retrieveUserToken())\n    dispatch(retrieveAdminToken())\n  },[dispatch])\n\n  return (\n      <React.Fragment>\n        <header>\n          <Header/>\n        </header>\n        <main>\n          <Router/>\n        </main>\n      </React.Fragment>\n  );\n}\n\nexport default App;\n","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/Header.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/Router.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminBookings.js",["265"],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminHeader.js",["266","267","268","269"],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminLogin.js",["270"],[],"import { Button, TextField, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useStyles } from '../../styles/styles'\nimport { useSelector ,useDispatch } from 'react-redux'\nimport { storeAdminToken } from '../redux/AdminActions'\n\n\nconst AdminLogin = () => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const [ adminCredentials, setAdminCredentials] = useState({\n      adminEmail : '',\n      adminPassword : ''\n    })\n    const classes = useStyles()\n    const changeCredentialHandler = (event) => {\n        setAdminCredentials((prevState) => ({\n        ...prevState,\n        [event.target.name] : event.target.value\n      }))\n    }\n    const submitHandler = (event) => {\n      event.preventDefault()\n      dispatch(storeAdminToken(adminCredentials))\n      \n      navigate('/admin/home',{replace:true})\n    }\n    return(<>\n      <form  onSubmit={ submitHandler }>\n        <Box className = {classes.loginForm}>\n          <Typography padding={1} variant='h4' textAlign=\"center\">\n           Admin Login\n          </Typography>\n          <TextField type={'email'} name='adminEmail' value={adminCredentials.adminEmail} onChange={changeCredentialHandler} placeholder='EmailID' margin='normal' required/>\n          <TextField type={'password'} name='adminPassword' value={adminCredentials.adminPassword} onChange={changeCredentialHandler} placeholder='Password' margin='normal' required/>\n          <Button type='submit' variant='contained' color='warning' style={{margin : '5% 0'}}>Login</Button>\n        </Box>\n      </form>\n      \n    </>)\n }\n\n export default AdminLogin","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminHome.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminMovies.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminMyProfile.js",["271"],[],"import { Button, SnackbarContent, Stack } from '@mui/material'\nimport { Box } from '@mui/system'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { viewAdminProfile } from '../redux/AdminActions'\n\n const AdminMyProfile = () => {\n  const adminId = useSelector( state => state.adminTokener._adminId )\n  const adminProfile = useSelector( state => state.admin.adminProfile )\n  const dispatch = useDispatch()\n    // useEffect(() => {\n    //   dispatch(viewAdminProfile(adminId))\n    // },[adminId])\n    useEffect(() => {\n      dispatch(viewAdminProfile(adminId))\n    },[adminId])\n    \n    return(<>\n      <Box sx={{\n            width: 400,\n            height: 370,\n            margin: 'auto',\n            marginTop:'90px'\n        }}>\n      <Stack spacing={1} sx={{ maxWidth: 600 }}>\n            <SnackbarContent message={adminProfile.adminName} action=\"Admin Name\"/>\n            <SnackbarContent message={adminProfile.adminEmail} action=\"Admin Email\" />\n      </Stack>\n        <Button LinkComponent={Link} to='/admin/my-profile/edit-profile' variant='outlined' sx={{ margin: 1, borderRadius: 3, marginLeft: 20, marginTop: 3 }} color='warning'>Edit</Button>\n        </Box>\n    </>)\n }\n\n export default AdminMyProfile\n\n\n","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/Feedbacks.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/Auth.js",["272","273","274","275","276","277"],[],"import { Button, TextField, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport React, { useEffect, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { useStyles } from '../../styles/styles'\nimport { useSelector ,useDispatch } from 'react-redux'\nimport { setSignOut, toggleSignup } from '../redux/SignupActions'\nimport { storeUserToken } from '../redux/UserActions'\nimport { useForm } from 'react-hook-form'\nimport ReactJsAlert from \"reactjs-alert\"\nimport '../../styles/Style.css'\n \nconst Login = () => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const { register, handleSubmit, formState : {errors}, watch , reset} = useForm({\n      mode : 'onChange'\n    })\n    const signup = useSelector( state => state.signUp.signup )\n    const classes = useStyles()\n    const signupHandler = () => {\n      dispatch(toggleSignup())\n    }\n    const { message, error } = useSelector( state => state.userTokener )\n    const submitHandler = async(userData) => {\n      if(signup)\n      {\n        dispatch(storeUserToken(userData, 'signup'))  \n        if(error === '')\n        {\n          dispatch(setSignOutn          navigate('/auth')\n        }\n      }\n      else{\n        dispatch(storeUserToken(userData))\n        if(error === '')\n        {\n          navigate('/home')\n        }\n      }\n      // reset()\n    }\n    const password = watch('userPassword')\n\n    return(<>\n      <form  onSubmit={ handleSubmit(submitHandler) }>\n        <Box className = {classes.loginForm}>\n          <Typography padding={1} variant='h4' textAlign=\"center\">\n            { signup ? \"Signup\" : \"Login\" }\n          </Typography>\n          {message && <small>{message}</small>}\n\n          { signup && <TextField {...register('userName',{ required : 'Username required', \n            pattern : {\n              value : /^[a-zA-Z ]+$/,\n              message : 'Username should contain only alphabets'\n            },\n            minLength : {\n            value : 3,\n            message : 'Username should contain atleast 3 letters'\n          }})} type={'text'}  className='input-credential' placeholder='Username' margin='normal' />  }\n          { errors.userName && <small className='credential-error'>{errors.userName.message}</small>}\n          <TextField type={'text'} {...register('userEmail',{ required : 'Email required',\n           pattern : {\n             value : /^([a-z]+[\\.-\\d]*)@([a-z-]+)\\.([a-z\\-]{2,8})(\\.[a-z]{2,8})?$/,\n             message : 'Invalid email format'\n           }\n          })} className='input-credential' placeholder='EmailID' margin='normal' />\n          { errors.userEmail && <small className='credential-error'>{errors.userEmail.message}</small>}\n          <TextField type={'password'} {...register('userPassword',{ required : 'Password required',\n           pattern : {\n            value : /^[a-zA-Z0-9]{8,20}$/,\n            message : 'Password should contain atleast 8 characters'\n           }\n          })} className='input-credential' placeholder='Password' margin='normal' />\n          { errors.userPassword && <small className='credential-error'>{errors.userPassword.message}</small>}\n          {\n            signup && <><TextField type={'password'} {...register('userConfirmPassword',{ required : 'Confirm Password required',\n            validate : confirm => confirm === password || 'Password mismatch'\n          })}  className='input-credential' placeholder='Confirm Password' margin='normal' />\n           { errors.userConfirmPassword && <small className='credential-error'>{errors.userConfirmPassword.message}</small>}\n            <TextField type={'text'} {...register('userContact',{ required : 'Contact required',\n            pattern : {\n              value : /^[6-9]{1}[0-9]{9}$/,\n              message : 'Invalid number'\n            }\n          })} className='input-credential' placeholder='Contact Number' margin='normal' />\n            { errors.userContact && <small className='credential-error'>{errors.userContact.message}</small>}\n            </>\n          }\n          {error && <small>{error}</small>}\n          <Button type='submit' variant='contained' color='warning' style={{margin : '5% 0'}}>{ signup ? \"Signup\" : \"Login\" }</Button>\n          { !signup && <Typography>Dont't have an account ?</Typography> }\n          <Link onClick={signupHandler} to='/auth'>{ !signup && \"Signup\"}</Link>\n        </Box>\n      </form>\n      {/* <ReactJsAlert\n          status={status} \n          type={type} \n          title={title}\n          \n        /> */}\n    </>)\n }\n\n export default Login","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/Bookings.js",["278"],[],"import { Grid } from '@mui/material'\nimport { Box } from '@mui/system'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { viewBook } from '../redux/BookActions'\nimport BookCard from './BookCards'\n\n const Bookings = () => {\n    const userId = useSelector( state => state.userTokener._userId )\n    const bookings = useSelector( state => state.book.bookings )\n    const dispatch = useDispatch()\n    useEffect(() => {\n      dispatch(viewBook(userId))\n    },[userId])\n    return(<>\n    <Box p={15} pt={15} >\n      <Grid container spacing={5}>\n        {\n          bookings && bookings.map( book => <BookCard key={book._id} data={book}></BookCard>) \n        }\n      </Grid>\n    </Box>\n      \n    </>)\n }\n\n export default Bookings","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/Movies.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/Home.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/MyProfile.js",["279"],[],"import { Button, SnackbarContent, Stack } from '@mui/material'\nimport { Box } from '@mui/system'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { viewProfile } from '../redux/UserActions'\n\n const MyProfile = () => {\n  const userId = useSelector( state => state.userTokener._userId )\n  const profile = useSelector( state => state.user.profile )\n  const dispatch = useDispatch()\n    useEffect(() => {\n      dispatch(viewProfile(userId))\n    },[userId])\n    return(<>\n      <Box sx={{\n            width: 400,\n            height: 370,\n            margin: 'auto',\n            marginTop:'90px'\n        }}>\n      <Stack spacing={1} sx={{ maxWidth: 600 }}>\n            <SnackbarContent message={profile.userName} action=\"User Name\" />\n            <SnackbarContent message={profile.userEmail} action=\"User Email\"/>\n            <SnackbarContent message={profile.userContact} action=\"User Contact\" />\n        </Stack>\n        <Button LinkComponent={Link} to='/my-profile/edit-profile' variant='outlined' sx={{ margin: 1, borderRadius: 3, marginLeft: 20, marginTop: 3 }} color='warning'>Edit</Button>\n        </Box>\n    </>)\n }\n\n export default MyProfile","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/About.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/UserHeader.js",["280","281"],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/EditProfile.js",["282","283"],[],"import { Button, TextField, Typography } from \"@mui/material\"\nimport { Box } from \"@mui/system\"\nimport React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useStyles } from \"../../styles/styles\"\nimport { updateProfile, viewProfile } from \"../redux/UserActions\"\nimport { useNavigate } from 'react-router-dom'\n\nconst EditProfile = () => {\n    const classes = useStyles()\n    const userId = useSelector( state => state.userTokener._userId )\n    const profile = useSelector( state => state.user.profile )\n    const { userName, userEmail, userPassword, userContact } = profile\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const [userCredentials, setUserCredentials] = useState({\n      userName,\n      userEmail,\n      userPassword,\n      userContact\n    })\n\n    useEffect(() => {\n      dispatch(viewProfile(userId))\n    },[dispatch])\n    \n    useEffect(() => {\n        if(profile)\n        setUserCredentials({\n          userName,\n          userEmail,\n          userPassword,\n          userContact\n        })\n    },[profile])\n    \n    const changeCredentialHandler = (event) => {\n        setUserCredentials((prevState) => ({\n            ...prevState,\n            [event.target.name] : event.target.value\n        }))\n    }\n    const updateHandler = (event) => {\n        event.preventDefault()\n        dispatch(updateProfile(userCredentials, userId))\n        navigate('/my-profile') \n    }\n    return(<>\n    <form onSubmit={ updateHandler }>\n        <Box className = {classes.loginForm}>\n          <Typography padding={1} variant='h4' textAlign=\"center\">\n          My Details\n          </Typography>\n          <TextField type={'text'} name='userName' value={userCredentials.userName || \"\"}  onChange={changeCredentialHandler} placeholder='Username' margin='normal' required/> \n          <TextField type={'email'} name='userEmail' value={userCredentials.userEmail || \"\"} onChange={changeCredentialHandler} placeholder='EmailID' margin='normal' required/>\n          <TextField type={'password'} name='userPassword' value={userCredentials.userPassword || \"\"} onChange={changeCredentialHandler} placeholder='Password' margin='normal' required/>\n          <TextField type={'text'} name='userContact' value={userCredentials.userContact || \"\"}  onChange={changeCredentialHandler} placeholder='Contact Number' margin='normal' required/>\n          <Button type='submit' variant='contained' color='warning' style={{margin : '5% 0'}}>Update</Button>\n        </Box>\n      </form>\n    </>)\n}\n\nexport default EditProfile","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminEditProfile.js",["284","285"],[],"import { Button, TextField, Typography } from \"@mui/material\"\nimport { Box } from \"@mui/system\"\nimport React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { updateAdminProfile, viewAdminProfile } from \"../redux/AdminActions\"\nimport { useNavigate } from 'react-router-dom'\nimport { useStyles } from \"../../styles/styles\"\n\nconst AdminEditProfile = () => {\n    const classes = useStyles()\n    const adminId = useSelector( state => state.adminTokener._adminId )\n    const adminProfile = useSelector( state => state.admin.adminProfile )\n    const { adminName, adminEmail, adminPassword } = adminProfile\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n  \n    const [adminCredentials, setAdminCredentials] = useState({\n      adminEmail,\n      adminPassword\n    })\n\n    useEffect(() => {\n      dispatch(viewAdminProfile(adminId))\n    },[dispatch])\n    \n    useEffect(() => {\n        if(adminProfile)\n        setAdminCredentials({\n          adminName,\n          adminEmail,\n          adminPassword\n        })\n    },[adminProfile])\n    \n    const changeCredentialHandler = (event) => {\n        setAdminCredentials((prevState) => ({\n            ...prevState,\n            [event.target.name] : event.target.value\n        }))\n    }\n    const updateHandler = (event) => {\n        event.preventDefault()\n        dispatch(updateAdminProfile(adminCredentials, adminId))\n        navigate('/admin/my-profile') \n    }\n    return(<>\n    <form onSubmit={ updateHandler }>\n        <Box className = {classes.loginForm}>\n          <Typography padding={1} variant='h4' textAlign=\"center\">\n          Admin Details\n          </Typography>\n          <TextField type={'text'} name='adminName' value={adminCredentials.adminName || \"\"}  onChange={changeCredentialHandler} placeholder='Admin Name' margin='normal' required/> \n          <TextField type={'text'} name='adminEmail' value={adminCredentials.adminEmail || \"\"}  onChange={changeCredentialHandler} placeholder='EmailID' margin='normal' required/> \n          <TextField type={'password'} name='adminPassword' value={adminCredentials.adminPassword || \"\"} onChange={changeCredentialHandler} placeholder='Password' margin='normal' required/>\n          <Button type='submit' variant='contained' color='warning' style={{margin : '5% 0'}}>Update</Button>\n        </Box>\n      </form>\n    </>)\n}\n\nexport default AdminEditProfile","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/movie/AboutMovie.js",["286","287","288","289"],[],"import { Box, Button, SnackbarContent, Stack } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { viewMovie } from \"../redux/MovieActions\";\n\nconst AboutMovie = () => {\n    let { movieId } = useParams();\n    const dispatch = useDispatch()\n    const movieDetails = useSelector(state => state.movie.film)\n    const { movieName, description, actorName, directorName, startBookingDate, ticketCost } = movieDetails\n    useEffect(() => {\n        dispatch(viewMovie(movieId))\n    }, [movieId])\n    return (<>\n        <Box sx={{\n            width: 400,\n            height: 370,\n            margin: 'auto',\n            marginTop:'90px'\n        }}>\n            <iframe src={movieDetails.movieVideoUrl} width='395px'  style={{marginBottom : '10px'}} allow='autoplay'></iframe>\n            <Stack spacing={1} sx={{ maxWidth: 600 }}>\n            <SnackbarContent message={movieName} action=\"Movie Name\" />\n            <SnackbarContent message={actorName} action=\"Actor Name\"/>\n            <SnackbarContent message={directorName} action=\"Director Name\" />\n            <SnackbarContent message={description} action=\"Description\" />\n            <SnackbarContent message={startBookingDate} action=\"Release Date\" />\n            <SnackbarContent message={ticketCost} action=\"Ticket Cost\" />\n            </Stack>\n          \n        </Box>\n    </>)\n}\n\nexport default AboutMovie","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/movie/MovieCard.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/movie/MovieDisplay.js",["290"],[],"import { Button, Card, CardActions, CardContent, CardMedia, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    root : {\n        margin : 'auto',\n        maxWidth : 350,\n        maxHeight : 500,\n        padding : 15,\n        marginBottom : 20,\n    }\n})\nconst MovieDisplay = ({ data }) => {\n    const classes = useStyles()\n    const navigate = useNavigate()\n    const viewHandler = () => {\n        navigate(`/movies/${data._id}`)\n    }\n    const bookHandler = () => {\n        navigate(`/movies/shows/${data._id}`)\n    }\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardMedia height={250}\n                    component=\"img\"\n                    alt=\"No image found\"\n                    image={data.movieImageUrl}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {data.movieName}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" component=\"p\">\n                       {data.description}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\" onClick={viewHandler} color=\"primary\" style={{marginRight:180}}>View</Button>\n                    <Button onClick={bookHandler} size=\"small\" color=\"warning\">Book</Button>\n                </CardActions>\n            </Card>\n       \n        </>\n    )\n}\n\nexport default MovieDisplay","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/movie/AboutMovieAdmin.js",["291","292","293"],[],"import { Box, Button, SnackbarContent, Stack } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { viewMovie } from \"../redux/MovieActions\";\n\nconst AboutMovieAdmin = () => {\n    let { movieId } = useParams();\n    const dispatch = useDispatch()\n    const movieDetails = useSelector(state => state.movie.film)\n    const { movieName, description, actorName, directorName, startBookingDate, ticketCost } = movieDetails\n    const navigate = useNavigate()\n    useEffect(() => {\n        dispatch(viewMovie(movieId))\n    }, [movieId])\n    const editHandler = () => {\n        navigate(`/admin/movies/${movieId}/edit`)\n    }\n    return (<>\n        <Box sx={{\n            width: 400,\n            height: 370,\n            margin: 'auto',\n            marginTop:'90px'\n        }}>\n            <iframe src={movieDetails.movieVideoUrl} width='395px'  style={{marginBottom : '10px'}} allow='autoplay'></iframe>\n            <Stack spacing={1} sx={{ maxWidth: 600 }}>\n            <SnackbarContent message={movieName} action=\"Movie Name\" />\n            <SnackbarContent message={actorName} action=\"Actor Name\"/>\n            <SnackbarContent message={directorName} action=\"Director Name\" />\n            <SnackbarContent message={description} action=\"Description\" />\n            <SnackbarContent message={startBookingDate} action=\"Release Date\" />\n            <SnackbarContent message={ticketCost} action=\"Ticket Cost\" />\n            </Stack>\n            <Button onClick={editHandler} variant=\"contained\" sx={{ margin: 1, borderRadius: 2, marginLeft: 20, marginTop: 1 }} color='warning'>Edit</Button>\n        </Box>\n    </>)\n}\n\nexport default AboutMovieAdmin","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/movie/EditMovie.js",["294","295"],[],"import { Button, TextField, Typography } from \"@mui/material\"\nimport { Box } from \"@mui/system\"\nimport React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useStyles } from \"../../styles/styles\"\nimport { updateMovie, viewMovie } from \"../redux/MovieActions\"\n\n\nconst EditMovie = () => {\n    const classes = useStyles()\n    let { movieId } = useParams();\n    const movieDetails = useSelector(state => state.movie.film)\n    const { movieImageUrl,\n        movieVideoUrl,\n        movieName,\n        ticketCost,\n        description,\n        actorName,\n        directorName,\n        startBookingDate,\n        endBookingDate} = movieDetails\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n  \n    const [movie, setMovie] = useState({\n      movieImageUrl,\n      movieVideoUrl,\n      movieName,\n      ticketCost,\n      description,\n      actorName,\n      directorName,\n      startBookingDate,\n      endBookingDate\n    })\n\n    useEffect(() => {\n      dispatch(viewMovie(movieId))\n    },[dispatch])\n    \n    useEffect(() => {\n        if(movieDetails)\n        setMovie({\n            movieImageUrl,\n            movieVideoUrl,\n            movieName,\n            ticketCost,\n            description,\n            actorName,\n            directorName,\n            startBookingDate,\n            endBookingDate\n        })\n    },[movieDetails])\n    \n    const detailsHandler = (event) => {\n        setMovie((prevState) => ({\n            ...prevState,\n            [event.target.name] : event.target.value\n        }))\n    }\n    const updateHandler = (event) => {\n        event.preventDefault()\n        dispatch(updateMovie(movie, movieId))\n        navigate(`/admin/movies/${movieId}`) \n    }\n    return(<>\n    <form onSubmit={ updateHandler }>\n        <Box className = {classes.loginForm}>\n          <Typography padding={1} variant='h4' textAlign=\"center\">\n          Movie Details\n          </Typography>\n          <TextField type={'text'} name='movieImageUrl' value={movie.movieImageUrl || \"\"} onChange={detailsHandler} placeholder='Image Url' margin='normal' required/>\n          <TextField type={'text'} name='movieVideoUrl' value={movie.movieVideoUrl || \"\"} onChange={detailsHandler} placeholder='Video Url' margin='normal' required/>\n          <TextField type={'text'} name='movieName' value={movie.movieName || \"\"} onChange={detailsHandler} placeholder='Movie Name' margin='normal' required/>\n          <TextField type={'number'} name='ticketCost' value={movie.ticketCost || \"\"} onChange={detailsHandler} placeholder='Ticket Cost' margin='normal' required/>\n          <TextField type={'text'} name='description' value={movie.description || \"\"} onChange={detailsHandler} placeholder='Description' margin='normal' required/>\n          <TextField type={'text'} name='actorName' value={movie.actorName || ''} onChange={detailsHandler} placeholder='Actor Name' margin='normal' required/>\n          <TextField type={'text'} name='directorName' value={movie.directorName || \"\"} onChange={detailsHandler} placeholder='Director Name' margin='normal' required/>\n          <TextField type={'date'} name='startBookingDate' value={movie.startBookingDate || \"\"} onChange={detailsHandler}  margin='normal' required/>\n          <TextField type={'date'} name='endBookingDate' value={movie.endBookingDate || \"\"} onChange={detailsHandler} margin='normal' required/>\n          <Button type='submit' variant='contained' color='warning' style={{margin : '5% 0'}}>Update</Button>\n        </Box>\n      </form>\n    </>)\n}\n\nexport default EditMovie","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/movie/Carousel.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/show/Shows.js",["296","297","298"],[],"import { Grid, ToggleButton, ToggleButtonGroup } from '@mui/material'\nimport { Box } from \"@mui/system\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport SeatDisplay from '../movie/SeatDisplay';\nimport { viewShow } from \"../redux/ShowActions\";\n\n\nconst Shows = () => {\n  const [display, setDisplay] = useState(false)\n  const location = useLocation()\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const { movieId } = useParams()\n  const dates = useSelector(state => (state.show.shows))\n  const [date, setDate] = useState('')\n  const [toggle, setToggle] = useState('');\n  const tabChange = (event, newTab) => {\n    setToggle(newTab);\n  };\n  useEffect(() => {\n    dispatch(viewShow(movieId))\n  }, [movieId])\n \n  const displaySeats = (event) => {\n    setDate(event.target.value)\n    setDisplay(true)\n  }\n  return (<>\n    <Box p={10} pt={10} >\n      <Grid container spacing={0.5}>\n        <ToggleButtonGroup value={toggle} onChange={tabChange} exclusive style={{ marginLeft: 250, marginTop: 30 }}>\n          {\n          dates && dates.map((date, index) => <ToggleButton onClick={displaySeats} key={index} value={date.showDate.substring(0,10)} style={{width:200}}>{date.showDate.substring(0,10)}\n          </ToggleButton>)\n          }\n        </ToggleButtonGroup>\n        \n      </Grid>\n    </Box>\n          {\n            display && <SeatDisplay data={{selectedDate : date, selectedMovieId : movieId, movie : dates[0].movie }}></SeatDisplay>\n          }\n          \n  </>)\n}\n\nexport default Shows","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/BookCards.js",["299","300","301"],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminBookCard.js",["302","303","304"],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/movie/SeatDisplay.js",["305"],[],"import { Box, Button, Card, CardContent, Checkbox, Typography } from '@material-ui/core'\nimport { makeStyles } from \"@material-ui/styles\";\nimport { CardMedia } from '@mui/material';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { bookShow } from '../redux/ShowActions';\nimport ReactJsAlert from \"reactjs-alert\"\n\nconst label = { inputProps: { 'aria-label': 'Checkbox demo' } }\nconst useStyles = makeStyles({\n  root: {\n    margin: 'auto',\n    padding: 15,\n    marginBottom: 20,\n  },\n  card: {\n        margin : 'auto',\n        maxWidth : 350,\n        maxHeight : 500,\n        padding : 15\n    }\n})\n\nconst SeatDisplay = ({data}) => {\n  const dispatch = useDispatch()\n  const classes = useStyles()\n  const userId = useSelector( state => state.userTokener._userId )\n  const {message} = useSelector( state => state.booking)\n  const navigate = useNavigate()\n  const [status, setStatus] = useState(false)\n  const [title, setTitle] = useState('')\n  const [type, setType] = useState('')\n  const [seats, setSeats] = useState([])\n  const selectSeats = (event) => {\n    if (!seats.includes(event.target.value))\n      setSeats(prev => [...prev, event.target.value])\n    else \n    {\n      let filteredSeats = seats.filter(seat => seat !== event.target.value)\n      setSeats(filteredSeats)\n    }\n  }\n\nconst bookHandler = () => {\n    dispatch(bookShow({ movieId : data.selectedMovieId, showDate : data.selectedDate, userId, seats }))\n    if(message === '')\n    {setStatus(true)\n    setTitle('successfully your tickets have been confirmed')\n    setType('success')}\n}\nconsole.log(\"movie show : \",data.movie)\n  return (<div className='row'>\n    <div className='col-md-8'>\n    <Box ml={41} >\n      <div>\n         <Checkbox {...label} value={1} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={2} onClick={selectSeats} className={classes.root} />\n         <Checkbox {...label} value={3} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={4} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={5} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={6} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={7} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={8} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={9} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={10} onClick={selectSeats} className={classes.root}/>\n         </div>\n         <div>\n         <Checkbox {...label} value={11} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={12} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={13} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={14} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={15} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={16} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={17} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={18} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={19} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={20} onClick={selectSeats} className={classes.root}/>\n         </div>\n         <div>\n         <Checkbox {...label} value={21} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={22} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={23} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={24} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={25} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={26} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={27} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={28} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={29} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={30} onClick={selectSeats} className={classes.root}/>\n         </div>\n         <div>\n         <Checkbox {...label} value={31} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={32} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={33} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={34} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={35} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={36} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={37} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={38} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={39} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={40} onClick={selectSeats} className={classes.root}/>\n         </div>\n         <div> \n         <Checkbox {...label} value={41} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={42} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={43} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={44} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={45} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={46} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={47} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={48} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={49} onClick={selectSeats} className={classes.root}/>\n         <Checkbox {...label} value={50} onClick={selectSeats} className={classes.root}/>\n         </div>\n    </Box>\n    <Button onClick={bookHandler} variant='contained' color='warning' style={{marginTop:20, marginLeft : 550}}>Book</Button>\n    </div>\n    <div className='col-md-4' style={{position : 'relative', bottom : 60}}>\n      {seats && (<><Card className={classes.card}>\n                <CardMedia height={250}\n                    component=\"img\"\n                    alt=\"No image found\"\n                    image={data.movie.movieImageUrl}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    <span>Movie Name : </span>{data.movie.movieName}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" component=\"p\">\n                    <span>Booked Seats : </span>{seats.toString()}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" component=\"p\">\n                    <span>Ticket Cost : </span>{data.movie.ticketCost}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" component=\"p\">\n                    <span>Show Date : </span>{data.selectedDate}\n                    </Typography>\n                </CardContent>\n            </Card>\n            </>) }\n    </div>\n    {/* <Checkbox {...label} disabled checked /> */}\n    <ReactJsAlert\n          status={status} type={type} title={title} Close = {(status) => {\n            setStatus(false)\n            navigate('/')\n          }}/>\n  </div>\n  \n  )\n}\n\nexport default SeatDisplay","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/ActionTypes.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/ShowActions.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/UserActions.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/AdminActions.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/MovieActions.js",["306"],[],"import { SET_MOVIES, VIEW_MOVIE, DELETE_MOVIE } from \"./ActionTypes\"\nimport axios from 'axios'\nimport { MovieBase } from \"../api/BaseUrl\"\nimport { axiosAdminInstance } from \"../api/Interceptors\"\n\nconst setMovie = (movies) => {\n    return {\n        type : SET_MOVIES,\n        payload : movies\n    }\n}\nconst setSingleMovie = (movie) => {\n    return {\n        type : VIEW_MOVIE,\n        payload : movie\n    }\n}\n\nconst addMovies = (movieDetails) => {\n    return (dispatch) => {\n        axiosAdminInstance({\n            url: `movies`,\n            method: \"post\",\n            data:movieDetails\n        })\n        .then(movie => { \n            dispatch(setMovie(movie.data.movie))\n        })\n        .catch( err => console.log(\"error : \",err))\n    }\n}\nconst viewMovie = (movieId) => {\n    return(dispatch) => {\n        axios.get(`${MovieBase}/${movieId}`)\n        .then(movie => {\n            dispatch(setSingleMovie(movie.data.movie))\n        })\n        .catch( err => console.log(err) )\n    }\n}\nconst deleteMovie = (movieId) => {\n    return() => {\n        axiosAdminInstance({\n            url: `movies/${movieId}`,\n            method: \"delete\"\n        })\n        .then((message) => console.log(message) )\n        .catch( (err) => console.log(err))\n    }\n}\nconst updateMovie = (movieDetails,movieId) => {\n    return(dispatch) => {\n        axiosAdminInstance({\n            url: `movies/${movieId}`,\n            method: \"put\",\n            data:movieDetails\n        })\n        .then(() => {\n            dispatch(setMovie(movieDetails))\n        })\n        .catch( err => console.log(err))\n    }\n}\nexport {\n    addMovies,\n    viewMovie,\n    deleteMovie,\n    updateMovie\n}","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/SignupActions.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/Store.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/RootReducer.js",["307","308","309"],[],"import { combineReducers } from \"@reduxjs/toolkit\"\nimport { movieReducer } from \"./MovieReducer\"\nimport { tokenUserReducer, userErrorReducer, userLoginReducer, userReducer, userSuccessReducer } from \"./UserReducer\"\nimport { adminReducer, tokenAdminReducer } from \"./AdminReducer\"\nimport { signUpReducer } from \"./SignUpReducer\"\nimport { bookingReducer, seatsReducer, showsReducer } from \"./ShowReducer\"\nimport { bookReducer } from \"./BookReducer\"\n\nconst root = combineReducers({\n    movie : movieReducer,\n    user : userReducer,\n    userTokener : tokenUserReducer,\n    admin : adminReducer,\n    adminTokener : tokenAdminReducer,\n    signUp : signUpReducer,\n    show : showsReducer,\n    book : bookReducer,\n    seat : seatsReducer,\n    booking : bookingReducer\n})\n\nexport default root","/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/SignUpReducer.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/ShowReducer.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/UserReducer.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/BookReducer.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/AdminReducer.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/MovieReducer.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/styles/styles.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/ProtectComponent.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/api/BaseUrl.js",[],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/BookActions.js",["310","311"],[],"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/api/Interceptors.js",[],[],{"ruleId":"312","severity":1,"message":"313","line":6,"column":8,"nodeType":"314","messageId":"315","endLine":6,"endColumn":13},{"ruleId":"316","severity":1,"message":"317","line":13,"column":6,"nodeType":"318","endLine":13,"endColumn":8,"suggestions":"319"},{"ruleId":"312","severity":1,"message":"320","line":7,"column":28,"nodeType":"314","messageId":"315","endLine":7,"endColumn":44},{"ruleId":"312","severity":1,"message":"321","line":10,"column":11,"nodeType":"314","messageId":"315","endLine":10,"endColumn":18},{"ruleId":"312","severity":1,"message":"322","line":18,"column":11,"nodeType":"314","messageId":"315","endLine":18,"endColumn":19},{"ruleId":"316","severity":1,"message":"323","line":40,"column":7,"nodeType":"318","endLine":40,"endColumn":33,"suggestions":"324"},{"ruleId":"312","severity":1,"message":"325","line":6,"column":10,"nodeType":"314","messageId":"315","endLine":6,"endColumn":21},{"ruleId":"316","severity":1,"message":"317","line":17,"column":7,"nodeType":"318","endLine":17,"endColumn":16,"suggestions":"326"},{"ruleId":"312","severity":1,"message":"327","line":3,"column":17,"nodeType":"314","messageId":"315","endLine":3,"endColumn":26},{"ruleId":"312","severity":1,"message":"328","line":3,"column":28,"nodeType":"314","messageId":"315","endLine":3,"endColumn":36},{"ruleId":"312","severity":1,"message":"329","line":10,"column":8,"nodeType":"314","messageId":"315","endLine":10,"endColumn":20},{"ruleId":"312","severity":1,"message":"330","line":16,"column":67,"nodeType":"314","messageId":"315","endLine":16,"endColumn":72},{"ruleId":"331","severity":1,"message":"332","line":66,"column":32,"nodeType":"333","messageId":"334","endLine":66,"endColumn":33,"suggestions":"335"},{"ruleId":"331","severity":1,"message":"336","line":66,"column":57,"nodeType":"333","messageId":"334","endLine":66,"endColumn":58,"suggestions":"337"},{"ruleId":"316","severity":1,"message":"317","line":14,"column":7,"nodeType":"318","endLine":14,"endColumn":15,"suggestions":"338"},{"ruleId":"316","severity":1,"message":"317","line":14,"column":7,"nodeType":"318","endLine":14,"endColumn":15,"suggestions":"339"},{"ruleId":"312","severity":1,"message":"340","line":3,"column":29,"nodeType":"314","messageId":"315","endLine":3,"endColumn":40},{"ruleId":"316","severity":1,"message":"323","line":43,"column":7,"nodeType":"318","endLine":43,"endColumn":31,"suggestions":"341"},{"ruleId":"316","severity":1,"message":"342","line":25,"column":7,"nodeType":"318","endLine":25,"endColumn":17,"suggestions":"343"},{"ruleId":"316","severity":1,"message":"344","line":35,"column":7,"nodeType":"318","endLine":35,"endColumn":16,"suggestions":"345"},{"ruleId":"316","severity":1,"message":"346","line":24,"column":7,"nodeType":"318","endLine":24,"endColumn":17,"suggestions":"347"},{"ruleId":"316","severity":1,"message":"348","line":33,"column":7,"nodeType":"318","endLine":33,"endColumn":21,"suggestions":"349"},{"ruleId":"312","severity":1,"message":"350","line":1,"column":15,"nodeType":"314","messageId":"315","endLine":1,"endColumn":21},{"ruleId":"312","severity":1,"message":"340","line":4,"column":10,"nodeType":"314","messageId":"315","endLine":4,"endColumn":21},{"ruleId":"316","severity":1,"message":"317","line":14,"column":8,"nodeType":"318","endLine":14,"endColumn":17,"suggestions":"351"},{"ruleId":"352","severity":1,"message":"353","line":22,"column":13,"nodeType":"354","endLine":22,"endColumn":118},{"ruleId":"312","severity":1,"message":"355","line":4,"column":10,"nodeType":"314","messageId":"315","endLine":4,"endColumn":14},{"ruleId":"312","severity":1,"message":"355","line":4,"column":10,"nodeType":"314","messageId":"315","endLine":4,"endColumn":14},{"ruleId":"316","severity":1,"message":"317","line":15,"column":8,"nodeType":"318","endLine":15,"endColumn":17,"suggestions":"356"},{"ruleId":"352","severity":1,"message":"353","line":26,"column":13,"nodeType":"354","endLine":26,"endColumn":118},{"ruleId":"316","severity":1,"message":"357","line":40,"column":7,"nodeType":"318","endLine":40,"endColumn":17,"suggestions":"358"},{"ruleId":"316","severity":1,"message":"359","line":55,"column":7,"nodeType":"318","endLine":55,"endColumn":21,"suggestions":"360"},{"ruleId":"312","severity":1,"message":"361","line":12,"column":9,"nodeType":"314","messageId":"315","endLine":12,"endColumn":17},{"ruleId":"312","severity":1,"message":"322","line":13,"column":9,"nodeType":"314","messageId":"315","endLine":13,"endColumn":17},{"ruleId":"316","severity":1,"message":"317","line":24,"column":6,"nodeType":"318","endLine":24,"endColumn":15,"suggestions":"362"},{"ruleId":"312","severity":1,"message":"325","line":5,"column":23,"nodeType":"314","messageId":"315","endLine":5,"endColumn":34},{"ruleId":"312","severity":1,"message":"322","line":18,"column":11,"nodeType":"314","messageId":"315","endLine":18,"endColumn":19},{"ruleId":"312","severity":1,"message":"363","line":19,"column":11,"nodeType":"314","messageId":"315","endLine":19,"endColumn":19},{"ruleId":"312","severity":1,"message":"325","line":5,"column":23,"nodeType":"314","messageId":"315","endLine":5,"endColumn":34},{"ruleId":"312","severity":1,"message":"322","line":19,"column":11,"nodeType":"314","messageId":"315","endLine":19,"endColumn":19},{"ruleId":"312","severity":1,"message":"363","line":20,"column":11,"nodeType":"314","messageId":"315","endLine":20,"endColumn":19},{"ruleId":"312","severity":1,"message":"327","line":4,"column":17,"nodeType":"314","messageId":"315","endLine":4,"endColumn":26},{"ruleId":"312","severity":1,"message":"364","line":1,"column":34,"nodeType":"314","messageId":"315","endLine":1,"endColumn":46},{"ruleId":"312","severity":1,"message":"365","line":3,"column":28,"nodeType":"314","messageId":"315","endLine":3,"endColumn":44},{"ruleId":"312","severity":1,"message":"366","line":3,"column":46,"nodeType":"314","messageId":"315","endLine":3,"endColumn":62},{"ruleId":"312","severity":1,"message":"367","line":3,"column":77,"nodeType":"314","messageId":"315","endLine":3,"endColumn":95},{"ruleId":"312","severity":1,"message":"313","line":1,"column":8,"nodeType":"314","messageId":"315","endLine":1,"endColumn":13},{"ruleId":"312","severity":1,"message":"368","line":2,"column":10,"nodeType":"314","messageId":"315","endLine":2,"endColumn":18},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["369"],"'viewAdminProfile' is defined but never used.","'classes' is assigned a value but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.",["370"],"'useSelector' is defined but never used.",["371"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'ReactJsAlert' is defined but never used.","'reset' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["372","373"],"Unnecessary escape character: \\-.",["374","375"],["376"],["377"],"'useNavigate' is defined but never used.",["378"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["379"],"React Hook useEffect has missing dependencies: 'userContact', 'userEmail', 'userName', and 'userPassword'. Either include them or remove the dependency array.",["380"],"React Hook useEffect has a missing dependency: 'adminId'. Either include it or remove the dependency array.",["381"],"React Hook useEffect has missing dependencies: 'adminEmail', 'adminName', and 'adminPassword'. Either include them or remove the dependency array.",["382"],"'Button' is defined but never used.",["383"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Link' is defined but never used.",["384"],"React Hook useEffect has a missing dependency: 'movieId'. Either include it or remove the dependency array.",["385"],"React Hook useEffect has missing dependencies: 'actorName', 'description', 'directorName', 'endBookingDate', 'movieImageUrl', 'movieName', 'movieVideoUrl', 'startBookingDate', and 'ticketCost'. Either include them or remove the dependency array.",["386"],"'location' is assigned a value but never used.",["387"],"'dispatch' is assigned a value but never used.","'DELETE_MOVIE' is defined but never used.","'userErrorReducer' is defined but never used.","'userLoginReducer' is defined but never used.","'userSuccessReducer' is defined but never used.","'BookBase' is defined but never used.",{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"messageId":"394","fix":"395","desc":"396"},{"messageId":"397","fix":"398","desc":"399"},{"messageId":"394","fix":"400","desc":"396"},{"messageId":"397","fix":"401","desc":"399"},{"desc":"402","fix":"403"},{"desc":"402","fix":"404"},{"desc":"405","fix":"406"},{"desc":"402","fix":"407"},{"desc":"408","fix":"409"},{"desc":"392","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"desc":"413","fix":"415"},{"desc":"413","fix":"416"},{"desc":"417","fix":"418"},{"desc":"413","fix":"419"},"Update the dependencies array to be: [dispatch]",{"range":"420","text":"421"},"Update the dependencies array to be: [selectTab, admin._adminId, location.pathname]",{"range":"422","text":"423"},"Update the dependencies array to be: [adminId, dispatch]",{"range":"424","text":"425"},"removeEscape",{"range":"426","text":"427"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"428","text":"429"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"430","text":"427"},{"range":"431","text":"429"},"Update the dependencies array to be: [dispatch, userId]",{"range":"432","text":"433"},{"range":"434","text":"433"},"Update the dependencies array to be: [location.pathname, selectTab, user._userId]",{"range":"435","text":"436"},{"range":"437","text":"433"},"Update the dependencies array to be: [profile, userContact, userEmail, userName, userPassword]",{"range":"438","text":"439"},{"range":"440","text":"425"},"Update the dependencies array to be: [adminEmail, adminName, adminPassword, adminProfile]",{"range":"441","text":"442"},"Update the dependencies array to be: [dispatch, movieId]",{"range":"443","text":"444"},{"range":"445","text":"444"},{"range":"446","text":"444"},"Update the dependencies array to be: [actorName, description, directorName, endBookingDate, movieDetails, movieImageUrl, movieName, movieVideoUrl, startBookingDate, ticketCost]",{"range":"447","text":"448"},{"range":"449","text":"444"},[463,465],"[dispatch]",[1371,1397],"[selectTab, admin._adminId, location.pathname]",[658,667],"[adminId, dispatch]",[4409,4410],"",[4409,4409],"\\",[4434,4435],[4434,4434],[507,515],"[dispatch, userId]",[537,545],[1410,1434],"[location.pathname, selectTab, user._userId]",[901,911],[1093,1102],"[profile, userContact, userEmail, userName, userPassword]",[904,914],[1082,1096],"[adminEmail, adminName, adminPassword, adminProfile]",[612,621],"[dispatch, movieId]",[658,667],[1109,1119],[1441,1455],"[actorName, description, directorName, endBookingDate, movieDetails, movieImageUrl, movieName, movieVideoUrl, startBookingDate, ticketCost]",[853,862]]