{"ast":null,"code":"var _jsxFileName = \"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/ProtectComponent.js\";\nimport { Component } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { retrieveUserToken } from './redux/UserActions';\nimport jwtdecode from 'jwt-decode'; // const ProtectComponent = ({role, children}) => {\n//     const user = useSelector( state => state.user )\n//     const admin = useSelector( state => state.admin )\n//     if(user._userId && user.userRole === role)\n//     return children\n//     if(admin._adminId && admin.adminRole === role)\n//     return children\n//     if(role === 'admin')\n//     return <Navigate to='/admin' replace/>\n//     else if(role === 'user')\n//     return <Navigate to='/home' replace/>\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProtectComponent extends Component {\n  // user = useSelector( state => state.user )\n  // admin = useSelector( state => state.admin )\n  // constructor(props){\n  //     super(props)\n  // }\n  componentWillMount() {\n    console.log(\"will mount\");\n    this.props.dispatch(retrieveUserToken());\n  }\n\n  render() {\n    const user = this.props.user;\n    const role = this.props.role;\n    const decode = jwtdecode(user.userToken);\n    if (decode.id && decode.role === role) return this.props.children; // if(admin._adminId && admin.adminRole === role)\n    // return this.props.children\n    // if(role === 'admin')\n    // return <Navigate to='/admin' replace/>\n    else if (role === 'user') {\n      console.log(\"re render to auth user\");\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/auth\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }, this);\n    }\n  }\n\n}\n\nconst mapUserStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapAdminStateToProps = state => {\n  return {\n    admin: state.admin\n  };\n}; // const mapAdminStateToProps = state => {\n//     return {\n//         admin : state.admin\n//     }\n// }\n\n\nexport default connect(mapUserStateToProps, mapAdminStateToProps)(ProtectComponent);","map":{"version":3,"names":["Component","useSelector","Navigate","connect","retrieveUserToken","jwtdecode","ProtectComponent","componentWillMount","console","log","props","dispatch","render","user","role","decode","userToken","id","children","mapUserStateToProps","state","mapAdminStateToProps","admin"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/ProtectComponent.js"],"sourcesContent":["import { Component } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Navigate } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { retrieveUserToken } from './redux/UserActions'\nimport jwtdecode from 'jwt-decode'\n\n// const ProtectComponent = ({role, children}) => {\n//     const user = useSelector( state => state.user )\n//     const admin = useSelector( state => state.admin )\n    \n//     if(user._userId && user.userRole === role)\n//     return children\n\n//     if(admin._adminId && admin.adminRole === role)\n//     return children\n\n//     if(role === 'admin')\n//     return <Navigate to='/admin' replace/>\n    \n//     else if(role === 'user')\n//     return <Navigate to='/home' replace/>\n    \n    \n// }\nclass ProtectComponent extends Component{\n    // user = useSelector( state => state.user )\n    // admin = useSelector( state => state.admin )\n    // constructor(props){\n    //     super(props)\n    // }\n    componentWillMount(){\n        console.log(\"will mount\")\n        this.props.dispatch(retrieveUserToken())\n    }\n    render(){\n        const user = this.props.user\n        const role = this.props.role\n        const decode = jwtdecode(user.userToken)\n      \n    if(decode.id && decode.role === role)\n    return this.props.children\n\n    // if(admin._adminId && admin.adminRole === role)\n    // return this.props.children\n\n    // if(role === 'admin')\n    // return <Navigate to='/admin' replace/>\n    \n    else if(role === 'user')\n    {\n        console.log(\"re render to auth user\")\n        return <Navigate to='/auth' replace/>}\n    }\n}\n\nconst mapUserStateToProps = state => {\n    return {\n        user : state.user\n    }\n}\nconst mapAdminStateToProps = state => {\n    return {\n        admin : state.admin\n    }\n}\n\n// const mapAdminStateToProps = state => {\n//     return {\n//         admin : state.admin\n//     }\n// }\n\nexport default connect(mapUserStateToProps, mapAdminStateToProps)(ProtectComponent)"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;;;;AACA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAwC;EACpC;EACA;EACA;EACA;EACA;EACAO,kBAAkB,GAAE;IAChBC,OAAO,CAACC,GAAR,CAAY,YAAZ;IACA,KAAKC,KAAL,CAAWC,QAAX,CAAoBP,iBAAiB,EAArC;EACH;;EACDQ,MAAM,GAAE;IACJ,MAAMC,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAxB;IACA,MAAMC,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAxB;IACA,MAAMC,MAAM,GAAGV,SAAS,CAACQ,IAAI,CAACG,SAAN,CAAxB;IAEJ,IAAGD,MAAM,CAACE,EAAP,IAAaF,MAAM,CAACD,IAAP,KAAgBA,IAAhC,EACA,OAAO,KAAKJ,KAAL,CAAWQ,QAAlB,CADA,CAGA;IACA;IAEA;IACA;IAPA,KASK,IAAGJ,IAAI,KAAK,MAAZ,EACL;MACIN,OAAO,CAACC,GAAR,CAAY,wBAAZ;MACA,oBAAO,QAAC,QAAD;QAAU,EAAE,EAAC,OAAb;QAAqB,OAAO;MAA5B;QAAA;QAAA;QAAA;MAAA,QAAP;IAAsC;EACzC;;AA5BmC;;AA+BxC,MAAMU,mBAAmB,GAAGC,KAAK,IAAI;EACjC,OAAO;IACHP,IAAI,EAAGO,KAAK,CAACP;EADV,CAAP;AAGH,CAJD;;AAKA,MAAMQ,oBAAoB,GAAGD,KAAK,IAAI;EAClC,OAAO;IACHE,KAAK,EAAGF,KAAK,CAACE;EADX,CAAP;AAGH,CAJD,C,CAMA;AACA;AACA;AACA;AACA;;;AAEA,eAAenB,OAAO,CAACgB,mBAAD,EAAsBE,oBAAtB,CAAP,CAAmDf,gBAAnD,CAAf"},"metadata":{},"sourceType":"module"}