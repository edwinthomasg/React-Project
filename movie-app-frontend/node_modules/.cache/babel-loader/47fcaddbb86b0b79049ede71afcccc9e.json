{"ast":null,"code":"import jwtdecode from 'jwt-decode';\nconst adminInitialState = {\n  adminToken: sessionStorage.getItem(\"adminsToken\"),\n  _adminId: '',\n  adminRole: '',\n  adminProfile: '',\n  adminLoginMessage: '',\n  adminLoginSuccess: false\n};\n\nconst adminReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : adminInitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_ADMIN_TOKEN':\n    case 'SET_ADMIN_RETRIEVE_TOKEN':\n      const admin = jwtdecode(action.token);\n      return { ...state,\n        adminToken: action.token,\n        _adminId: admin.id,\n        adminRole: admin.role,\n        adminLoginMessage: action.payload,\n        log\n      };\n\n    case 'SET_ADMIN_LOGIN_ERROR':\n      return { ...state,\n        adminLoginMessage: action.payload,\n        adminLoginSuccess: false\n      };\n\n    case 'DELETE_ADMIN_TOKEN':\n      sessionStorage.removeItem(\"adminsToken\");\n      return {\n        adminToken: '',\n        _adminId: '',\n        adminRole: '',\n        adminProfile: '',\n        message: 'logged out'\n      };\n\n    case 'SET_ADMIN_PROFILE':\n      return { ...state,\n        adminProfile: action.payload,\n        message: 'profile loaded'\n      };\n\n    default:\n      return state;\n  }\n}; // const tokenAdminReducer = (state = tokenAdminState, action) => {\n//     switch(action.type){\n//         case 'SET_ADMIN_TOKEN' :\n//         case 'SET_ADMIN_RETRIEVE_TOKEN' : \n//         const admin = jwtdecode(action.token)\n//         return {\n//             ...tokenAdminState,\n//             adminToken : action.token,\n//             _adminId : admin.id,\n//             adminRole : admin.role,\n//             message : 'Admin Successfully logged in'\n//         }\n//         case 'DELETE_ADMIN_TOKEN' : sessionStorage.removeItem(\"adminsToken\")\n//         return {\n//             adminToken : '',\n//             _adminId : '',\n//             adminRole : '',\n//             message : 'Admin logged out'\n//         }\n//         default : return state\n//     }\n// }\n\n\nexport { adminReducer };","map":{"version":3,"names":["jwtdecode","adminInitialState","adminToken","sessionStorage","getItem","_adminId","adminRole","adminProfile","adminLoginMessage","adminLoginSuccess","adminReducer","state","action","type","admin","token","id","role","payload","log","removeItem","message"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/AdminReducer.js"],"sourcesContent":["import jwtdecode from 'jwt-decode'\n\nconst adminInitialState = {\n    adminToken : sessionStorage.getItem(\"adminsToken\"),\n    _adminId : '',\n    adminRole : '',\n    adminProfile : '',\n    adminLoginMessage : '',\n    adminLoginSuccess : false,\n}\n\nconst adminReducer = (state = adminInitialState, action) => {\n    switch(action.type){\n        case 'SET_ADMIN_TOKEN' :\n        case 'SET_ADMIN_RETRIEVE_TOKEN' : \n        const admin = jwtdecode(action.token)\n        return {\n            ...state,\n            adminToken : action.token,\n            _adminId : admin.id,\n            adminRole : admin.role,\n            adminLoginMessage : action.payload,\n            log\n        }\n        case 'SET_ADMIN_LOGIN_ERROR' : return {\n            ...state,\n            adminLoginMessage : action.payload,\n            adminLoginSuccess : false\n        }\n        case 'DELETE_ADMIN_TOKEN' : sessionStorage.removeItem(\"adminsToken\")\n        return {\n            adminToken : '',\n            _adminId : '',\n            adminRole : '',\n            adminProfile : '',\n            message : 'logged out'\n        }\n        case 'SET_ADMIN_PROFILE' : return {\n            ...state,\n            adminProfile : action.payload,\n            message : 'profile loaded'\n        }\n        default : return state\n    }\n}\n// const tokenAdminReducer = (state = tokenAdminState, action) => {\n//     switch(action.type){\n//         case 'SET_ADMIN_TOKEN' :\n//         case 'SET_ADMIN_RETRIEVE_TOKEN' : \n//         const admin = jwtdecode(action.token)\n//         return {\n//             ...tokenAdminState,\n//             adminToken : action.token,\n//             _adminId : admin.id,\n//             adminRole : admin.role,\n//             message : 'Admin Successfully logged in'\n\n//         }\n//         case 'DELETE_ADMIN_TOKEN' : sessionStorage.removeItem(\"adminsToken\")\n//         return {\n//             adminToken : '',\n//             _adminId : '',\n//             adminRole : '',\n//             message : 'Admin logged out'\n//         }\n//         default : return state\n//     }\n// }\n\nexport {\n    adminReducer\n}"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,MAAMC,iBAAiB,GAAG;EACtBC,UAAU,EAAGC,cAAc,CAACC,OAAf,CAAuB,aAAvB,CADS;EAEtBC,QAAQ,EAAG,EAFW;EAGtBC,SAAS,EAAG,EAHU;EAItBC,YAAY,EAAG,EAJO;EAKtBC,iBAAiB,EAAG,EALE;EAMtBC,iBAAiB,EAAG;AANE,CAA1B;;AASA,MAAMC,YAAY,GAAG,YAAuC;EAAA,IAAtCC,KAAsC,uEAA9BV,iBAA8B;EAAA,IAAXW,MAAW;;EACxD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,iBAAL;IACA,KAAK,0BAAL;MACA,MAAMC,KAAK,GAAGd,SAAS,CAACY,MAAM,CAACG,KAAR,CAAvB;MACA,OAAO,EACH,GAAGJ,KADA;QAEHT,UAAU,EAAGU,MAAM,CAACG,KAFjB;QAGHV,QAAQ,EAAGS,KAAK,CAACE,EAHd;QAIHV,SAAS,EAAGQ,KAAK,CAACG,IAJf;QAKHT,iBAAiB,EAAGI,MAAM,CAACM,OALxB;QAMHC;MANG,CAAP;;IAQA,KAAK,uBAAL;MAA+B,OAAO,EAClC,GAAGR,KAD+B;QAElCH,iBAAiB,EAAGI,MAAM,CAACM,OAFO;QAGlCT,iBAAiB,EAAG;MAHc,CAAP;;IAK/B,KAAK,oBAAL;MAA4BN,cAAc,CAACiB,UAAf,CAA0B,aAA1B;MAC5B,OAAO;QACHlB,UAAU,EAAG,EADV;QAEHG,QAAQ,EAAG,EAFR;QAGHC,SAAS,EAAG,EAHT;QAIHC,YAAY,EAAG,EAJZ;QAKHc,OAAO,EAAG;MALP,CAAP;;IAOA,KAAK,mBAAL;MAA2B,OAAO,EAC9B,GAAGV,KAD2B;QAE9BJ,YAAY,EAAGK,MAAM,CAACM,OAFQ;QAG9BG,OAAO,EAAG;MAHoB,CAAP;;IAK3B;MAAU,OAAOV,KAAP;EA9Bd;AAgCH,CAjCD,C,CAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACID,YADJ"},"metadata":{},"sourceType":"module"}