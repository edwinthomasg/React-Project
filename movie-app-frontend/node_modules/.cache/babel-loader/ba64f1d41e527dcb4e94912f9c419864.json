{"ast":null,"code":"var _jsxFileName = \"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminLogin.js\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useStyles } from '../../styles/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { storeAdminToken } from '../redux/AdminActions';\nimport { useForm } from 'react-hook-form';\nimport ReactJsAlert from 'reactjs-alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminLogin = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [adminCredentials, setAdminCredentials] = useState({\n    adminEmail: '',\n    adminPassword: ''\n  });\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    watch,\n    reset\n  } = useForm({\n    mode: 'onChange'\n  });\n\n  const submitHandler = adminData => {\n    dispatch(storeAdminToken(adminData));\n    navigate('/admin/home', {\n      replace: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submitHandler),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.loginForm,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          padding: 1,\n          variant: \"h4\",\n          textAlign: \"center\",\n          children: \"Admin Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register('adminEmail', {\n            required: 'Email required',\n            pattern: {\n              value: /^([a-z]+[\\.-\\d]*)@([a-z-]+)\\.([a-z\\-]{2,8})(\\.[a-z]{2,8})?$/,\n              message: 'Invalid email format'\n            }\n          }),\n          type: 'email',\n          placeholder: \"EmailID\",\n          margin: \"normal\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register('adminPassword', {\n            required: 'Password required',\n            pattern: {\n              value: /^[a-zA-Z0-9]{8,20}$/,\n              message: 'Password should contain atleast 8 characters'\n            }\n          }),\n          type: 'password',\n          placeholder: \"Password\",\n          margin: \"normal\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"warning\",\n          style: {\n            margin: '5% 0'\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AdminLogin, \"bXFx41EjCjsVXtw53sMPkYgCBL0=\", false, function () {\n  return [useNavigate, useDispatch, useStyles, useForm];\n});\n\n_c = AdminLogin;\nexport default AdminLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["Button","TextField","Typography","Box","React","useState","useNavigate","useStyles","useSelector","useDispatch","storeAdminToken","useForm","ReactJsAlert","AdminLogin","navigate","dispatch","adminCredentials","setAdminCredentials","adminEmail","adminPassword","classes","register","handleSubmit","formState","errors","watch","reset","mode","submitHandler","adminData","replace","loginForm","required","pattern","value","message","margin"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminLogin.js"],"sourcesContent":["import { Button, TextField, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useStyles } from '../../styles/styles'\nimport { useSelector ,useDispatch } from 'react-redux'\nimport { storeAdminToken } from '../redux/AdminActions'\nimport { useForm } from 'react-hook-form'\nimport ReactJsAlert from 'reactjs-alert'\n\nconst AdminLogin = () => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const [ adminCredentials, setAdminCredentials] = useState({\n      adminEmail : '',\n      adminPassword : ''\n    })\n    const classes = useStyles()\n    const { register, handleSubmit, formState : {errors}, watch , reset} = useForm({\n      mode : 'onChange'\n    })\n    const submitHandler = (adminData) => {\n      dispatch(storeAdminToken(adminData))\n      navigate('/admin/home',{replace:true})\n    }\n    return(<>\n      <form  onSubmit={ handleSubmit(submitHandler) }>\n        <Box className = {classes.loginForm}>\n          <Typography padding={1} variant='h4' textAlign=\"center\">\n           Admin Login\n          </Typography>\n          <TextField {...register('adminEmail',{ required : 'Email required',\n           pattern : {\n             value : /^([a-z]+[\\.-\\d]*)@([a-z-]+)\\.([a-z\\-]{2,8})(\\.[a-z]{2,8})?$/,\n             message : 'Invalid email format'\n           }\n          })} type={'email'} placeholder='EmailID' margin='normal' required/>\n          <TextField {...register('adminPassword',{ required : 'Password required',\n           pattern : {\n            value : /^[a-zA-Z0-9]{8,20}$/,\n            message : 'Password should contain atleast 8 characters'\n           }\n          })} type={'password'} placeholder='Password' margin='normal' required/>\n          <Button type='submit' variant='contained' color='warning' style={{margin : '5% 0'}}>Login</Button>\n        </Box>\n      </form>\n    </>)\n }\n\n export default AdminLogin"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,QAA8C,eAA9C;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAMS,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAM,CAAEO,gBAAF,EAAoBC,mBAApB,IAA2CZ,QAAQ,CAAC;IACxDa,UAAU,EAAG,EAD2C;IAExDC,aAAa,EAAG;EAFwC,CAAD,CAAzD;EAIA,MAAMC,OAAO,GAAGb,SAAS,EAAzB;EACA,MAAM;IAAEc,QAAF;IAAYC,YAAZ;IAA0BC,SAAS,EAAG;MAACC;IAAD,CAAtC;IAAgDC,KAAhD;IAAwDC;EAAxD,IAAiEf,OAAO,CAAC;IAC7EgB,IAAI,EAAG;EADsE,CAAD,CAA9E;;EAGA,MAAMC,aAAa,GAAIC,SAAD,IAAe;IACnCd,QAAQ,CAACL,eAAe,CAACmB,SAAD,CAAhB,CAAR;IACAf,QAAQ,CAAC,aAAD,EAAe;MAACgB,OAAO,EAAC;IAAT,CAAf,CAAR;EACD,CAHD;;EAIA,oBAAO;IAAA,uBACL;MAAO,QAAQ,EAAGR,YAAY,CAACM,aAAD,CAA9B;MAAA,uBACE,QAAC,GAAD;QAAK,SAAS,EAAIR,OAAO,CAACW,SAA1B;QAAA,wBACE,QAAC,UAAD;UAAY,OAAO,EAAE,CAArB;UAAwB,OAAO,EAAC,IAAhC;UAAqC,SAAS,EAAC,QAA/C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAIE,QAAC,SAAD,OAAeV,QAAQ,CAAC,YAAD,EAAc;YAAEW,QAAQ,EAAG,gBAAb;YACpCC,OAAO,EAAG;cACRC,KAAK,EAAG,6DADA;cAERC,OAAO,EAAG;YAFF;UAD0B,CAAd,CAAvB;UAKI,IAAI,EAAE,OALV;UAKmB,WAAW,EAAC,SAL/B;UAKyC,MAAM,EAAC,QALhD;UAKyD,QAAQ;QALjE;UAAA;UAAA;UAAA;QAAA,QAJF,eAUE,QAAC,SAAD,OAAed,QAAQ,CAAC,eAAD,EAAiB;YAAEW,QAAQ,EAAG,mBAAb;YACvCC,OAAO,EAAG;cACTC,KAAK,EAAG,qBADC;cAETC,OAAO,EAAG;YAFD;UAD6B,CAAjB,CAAvB;UAKI,IAAI,EAAE,UALV;UAKsB,WAAW,EAAC,UALlC;UAK6C,MAAM,EAAC,QALpD;UAK6D,QAAQ;QALrE;UAAA;UAAA;UAAA;QAAA,QAVF,eAgBE,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAsB,OAAO,EAAC,WAA9B;UAA0C,KAAK,EAAC,SAAhD;UAA0D,KAAK,EAAE;YAACC,MAAM,EAAG;UAAV,CAAjE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAhBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADK,iBAAP;AAsBF,CArCF;;GAAMvB,U;UACeP,W,EACAG,W,EAKDF,S,EACuDI,O;;;KARrEE,U;AAuCL,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}