{"ast":null,"code":"var _jsxFileName = \"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/AboutMovie.js\",\n    _s = $RefreshSig$();\n\nimport { Box, SnackbarContent, Stack } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { viewMovie } from \"./redux/movieActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AboutMovie = () => {\n  _s();\n\n  let {\n    movieId\n  } = useParams();\n  const dispatch = useDispatch();\n  const movieDetails = useSelector(state => state.movie.film);\n  const {\n    movieName,\n    description,\n    actorName,\n    directorName,\n    startBookingDate,\n    ticketCost\n  } = movieDetails;\n  console.log(movieId + \" ... \");\n  useEffect(() => {\n    dispatch(viewMovie(movieId));\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: 400,\n        height: 370,\n        margin: 'auto',\n        marginTop: '90px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: movieDetails.movieVideoUrl,\n        width: \"395px\",\n        style: {\n          marginBottom: '10px'\n        },\n        allow: \"autoplay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 1,\n        sx: {\n          maxWidth: 600\n        },\n        children: [/*#__PURE__*/_jsxDEV(SnackbarContent, {\n          message: movieName,\n          action: \"Movie Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SnackbarContent, {\n          message: actorName,\n          action: \"Actor Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SnackbarContent, {\n          message: directorName,\n          action: \"Director Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SnackbarContent, {\n          message: description,\n          action: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SnackbarContent, {\n          message: startBookingDate,\n          action: \"Release Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SnackbarContent, {\n          message: ticketCost,\n          action: \"Ticket Cost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AboutMovie, \"pzR2dgHozEF/Bl+VnplaSdva3BY=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = AboutMovie;\nexport default AboutMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"AboutMovie\");","map":{"version":3,"names":["Box","SnackbarContent","Stack","React","useEffect","useDispatch","useSelector","useParams","viewMovie","AboutMovie","movieId","dispatch","movieDetails","state","movie","film","movieName","description","actorName","directorName","startBookingDate","ticketCost","console","log","width","height","margin","marginTop","movieVideoUrl","marginBottom","maxWidth"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/AboutMovie.js"],"sourcesContent":["import { Box, SnackbarContent, Stack } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { viewMovie } from \"./redux/movieActions\";\n\nconst AboutMovie = () => {\n    let { movieId } = useParams();\n    const dispatch = useDispatch()\n    const movieDetails = useSelector(state => state.movie.film)\n    const { movieName, description, actorName, directorName, startBookingDate, ticketCost } = movieDetails\n    console.log(movieId+\" ... \")\n    useEffect(() => {\n        dispatch(viewMovie(movieId))\n    }, [movieId])\n    return (<>\n        <Box sx={{\n            width: 400,\n            height: 370,\n            margin: 'auto',\n            marginTop:'90px'\n        }}>\n            <iframe src={movieDetails.movieVideoUrl} width='395px'  style={{marginBottom : '10px'}} allow='autoplay'></iframe>\n            <Stack spacing={1} sx={{ maxWidth: 600 }}>\n            <SnackbarContent message={movieName} action=\"Movie Name\" />\n            <SnackbarContent message={actorName} action=\"Actor Name\"/>\n            <SnackbarContent message={directorName} action=\"Director Name\" />\n            <SnackbarContent message={description} action=\"Description\" />\n            <SnackbarContent message={startBookingDate} action=\"Release Date\" />\n            <SnackbarContent message={ticketCost} action=\"Ticket Cost\" />\n        </Stack>\n        </Box>\n    </>)\n}\n\nexport default AboutMovie"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,eAAd,EAA+BC,KAA/B,QAA4C,eAA5C;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,sBAA1B;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,IAAI;IAAEC;EAAF,IAAcH,SAAS,EAA3B;EACA,MAAMI,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAMO,YAAY,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,IAAtB,CAAhC;EACA,MAAM;IAAEC,SAAF;IAAaC,WAAb;IAA0BC,SAA1B;IAAqCC,YAArC;IAAmDC,gBAAnD;IAAqEC;EAArE,IAAoFT,YAA1F;EACAU,OAAO,CAACC,GAAR,CAAYb,OAAO,GAAC,OAApB;EACAN,SAAS,CAAC,MAAM;IACZO,QAAQ,CAACH,SAAS,CAACE,OAAD,CAAV,CAAR;EACH,CAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;EAGA,oBAAQ;IAAA,uBACJ,QAAC,GAAD;MAAK,EAAE,EAAE;QACLc,KAAK,EAAE,GADF;QAELC,MAAM,EAAE,GAFH;QAGLC,MAAM,EAAE,MAHH;QAILC,SAAS,EAAC;MAJL,CAAT;MAAA,wBAMI;QAAQ,GAAG,EAAEf,YAAY,CAACgB,aAA1B;QAAyC,KAAK,EAAC,OAA/C;QAAwD,KAAK,EAAE;UAACC,YAAY,EAAG;QAAhB,CAA/D;QAAwF,KAAK,EAAC;MAA9F;QAAA;QAAA;QAAA;MAAA,QANJ,eAOI,QAAC,KAAD;QAAO,OAAO,EAAE,CAAhB;QAAmB,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAZ,CAAvB;QAAA,wBACA,QAAC,eAAD;UAAiB,OAAO,EAAEd,SAA1B;UAAqC,MAAM,EAAC;QAA5C;UAAA;UAAA;UAAA;QAAA,QADA,eAEA,QAAC,eAAD;UAAiB,OAAO,EAAEE,SAA1B;UAAqC,MAAM,EAAC;QAA5C;UAAA;UAAA;UAAA;QAAA,QAFA,eAGA,QAAC,eAAD;UAAiB,OAAO,EAAEC,YAA1B;UAAwC,MAAM,EAAC;QAA/C;UAAA;UAAA;UAAA;QAAA,QAHA,eAIA,QAAC,eAAD;UAAiB,OAAO,EAAEF,WAA1B;UAAuC,MAAM,EAAC;QAA9C;UAAA;UAAA;UAAA;QAAA,QAJA,eAKA,QAAC,eAAD;UAAiB,OAAO,EAAEG,gBAA1B;UAA4C,MAAM,EAAC;QAAnD;UAAA;UAAA;UAAA;QAAA,QALA,eAMA,QAAC,eAAD;UAAiB,OAAO,EAAEC,UAA1B;UAAsC,MAAM,EAAC;QAA7C;UAAA;UAAA;UAAA;QAAA,QANA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADI,iBAAR;AAkBH,CA3BD;;GAAMZ,U;UACgBF,S,EACDF,W,EACIC,W;;;KAHnBG,U;AA6BN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}