{"ast":null,"code":"var _jsxFileName = \"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/show/Shows.js\",\n    _s = $RefreshSig$();\n\nimport { Grid } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { viewShow } from \"../redux/showTypes\";\nimport Date from '../movie/Date';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Shows = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    movieId\n  } = useParams();\n  const dates = useSelector(state => state.show.shows.showAvailableDates);\n  console.log(\"movie id : \", movieId);\n  console.log(\"shows date here : \", dates);\n  useEffect(() => {\n    dispatch(viewShow(movieId));\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 10,\n      pt: 10,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0.5,\n        children: [\"Shows Page\", /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          color: \"primary\",\n          exclusive: true,\n          style: {\n            marginLeft: 600,\n            marginTop: 80\n          },\n          children: dates && dates.map((date, index) => {\n            return /*#__PURE__*/_jsxDEV(ToggleButton, {\n              children: date.showDate.substring(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this);\n          } // <a href=\"/\" style={{marginRight : 10}}>{date.showDate.substring(0,10)}</a>\n          )\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Shows, \"92YQwtgnDow9Tc3Xr7rWlWEDocg=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n\n_c = Shows;\nexport default Shows;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shows\");","map":{"version":3,"names":["Grid","Box","React","useEffect","useDispatch","useSelector","useParams","viewShow","Date","Shows","dispatch","movieId","dates","state","show","shows","showAvailableDates","console","log","marginLeft","marginTop","map","date","index","showDate","substring"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/show/Shows.js"],"sourcesContent":["import { Grid } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { viewShow } from \"../redux/showTypes\";\nimport Date from '../movie/Date'\nconst Shows = () => {\n  const dispatch = useDispatch()\n  const { movieId } = useParams()\n  const dates = useSelector(state => (state.show.shows.showAvailableDates))\n\n  console.log(\"movie id : \", movieId)\n  console.log(\"shows date here : \", dates)\n\n  useEffect(() => {\n    dispatch(viewShow(movieId))\n  }, [movieId])\n  return (<>\n    <Box p={10} pt={10} >\n      <Grid container spacing={0.5}>\n        Shows Page\n        {/* {\n        dates && dates.map((date,index) => <Date key={index} data={date} />)\n       } */}\n        <ToggleButtonGroup color=\"primary\" exclusive style={{ marginLeft: 600, marginTop: 80 }}>\n          {dates && dates.map((date, index) => {\n            return (\n              <ToggleButton >{date.showDate.substring(0, 10)}</ToggleButton>\n            )\n          }\n            // <a href=\"/\" style={{marginRight : 10}}>{date.showDate.substring(0,10)}</a>\n          )}\n        </ToggleButtonGroup>\n\n\n\n      </Grid>\n    </Box>\n  </>)\n}\n\nexport default Shows"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,eAArB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;;AACA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAM;IAAEO;EAAF,IAAcL,SAAS,EAA7B;EACA,MAAMM,KAAK,GAAGP,WAAW,CAACQ,KAAK,IAAKA,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiBC,kBAA5B,CAAzB;EAEAC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BP,OAA3B;EACAM,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCN,KAAlC;EAEAT,SAAS,CAAC,MAAM;IACdO,QAAQ,CAACH,QAAQ,CAACI,OAAD,CAAT,CAAR;EACD,CAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;EAGA,oBAAQ;IAAA,uBACN,QAAC,GAAD;MAAK,CAAC,EAAE,EAAR;MAAY,EAAE,EAAE,EAAhB;MAAA,uBACE,QAAC,IAAD;QAAM,SAAS,MAAf;QAAgB,OAAO,EAAE,GAAzB;QAAA,sCAKE,QAAC,iBAAD;UAAmB,KAAK,EAAC,SAAzB;UAAmC,SAAS,MAA5C;UAA6C,KAAK,EAAE;YAAEQ,UAAU,EAAE,GAAd;YAAmBC,SAAS,EAAE;UAA9B,CAApD;UAAA,UACGR,KAAK,IAAIA,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;YACnC,oBACE,QAAC,YAAD;cAAA,UAAgBD,IAAI,CAACE,QAAL,CAAcC,SAAd,CAAwB,CAAxB,EAA2B,EAA3B;YAAhB;cAAA;cAAA;cAAA;YAAA,QADF;UAGD,CAJS,CAKR;UALQ;QADZ;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADM,iBAAR;AAsBD,CAjCD;;GAAMhB,K;UACaL,W,EACGE,S,EACND,W;;;KAHVI,K;AAmCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}