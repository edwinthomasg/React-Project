{"ast":null,"code":"import jwtdecode from 'jwt-decode';\nconst initialState = {\n  login: false,\n  signup: false,\n  user: true,\n  adminLogin: false\n};\nconst tokenState = {\n  userToken: localStorage.getItem(\"usersToken\"),\n  userName: '',\n  _id: '',\n  adminToken: localStorage.getItem(\"admin\")\n}; // const userInitialState = {\n//     userName : '',\n//     userEmail : '',\n//     userPassword : '',\n//     userConfirmPassword : ''\n// }\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_SIGNUP':\n      return { ...state,\n        signup: true\n      };\n\n    case 'SET_SIGNOUT':\n      return { ...state,\n        signup: false\n      };\n\n    case 'TOGGLE_SIGNUP':\n      return { ...state,\n        signup: !state.signup\n      };\n\n    case 'SET_ADMIN_LOGIN':\n      return { ...state,\n        adminLogin: true\n      };\n\n    case 'SET_ADMIN_LOGOUT':\n      return { ...state,\n        adminLogin: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst tokenReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : tokenState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_USER_TOKEN':\n    case 'SET_USER_RETRIEVE_TOKEN':\n      const user = jwtdecode(action.token);\n      console.log(\"after refresh : \", user);\n      return { ...tokenState,\n        userToken: action.token,\n        userName: user.userName,\n        _id: user.id\n      };\n\n    case 'DELETE_USER_TOKEN':\n      localStorage.removeItem(\"usersToken\");\n      return { ...tokenState,\n        tokeoken: '',\n        userName: '',\n        _id: ''\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport { authReducer, tokenReducer };","map":{"version":3,"names":["jwtdecode","initialState","login","signup","user","adminLogin","tokenState","userToken","localStorage","getItem","userName","_id","adminToken","authReducer","state","action","type","tokenReducer","token","console","log","id","removeItem","tokeoken"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/authReducer.js"],"sourcesContent":["import jwtdecode from 'jwt-decode'\n\nconst initialState = {\n    login : false,\n    signup : false,\n    user : true,\n    adminLogin : false\n}\nconst tokenState = {\n    userToken : localStorage.getItem(\"usersToken\"),\n    userName : '',\n    _id : '',\n    adminToken : localStorage.getItem(\"admin\")\n}\n// const userInitialState = {\n//     userName : '',\n//     userEmail : '',\n//     userPassword : '',\n//     userConfirmPassword : ''\n// }\nconst authReducer = (state = initialState, action) => {\n    switch(action.type){\n        case 'SET_SIGNUP' : return {\n            ...state,\n            signup : true\n        }\n        case 'SET_SIGNOUT' : return {\n            ...state,\n            signup : false\n        }\n        case 'TOGGLE_SIGNUP' : return {\n            ...state,\n            signup : ! state.signup\n        }\n        case 'SET_ADMIN_LOGIN' : return {\n            ...state,\n            adminLogin : true\n        }\n        case 'SET_ADMIN_LOGOUT' : return {\n            ...state,\n            adminLogin : false\n        }\n        default : return state\n    }\n}\nconst tokenReducer = (state = tokenState, action) => {\n    switch(action.type){\n        case 'SET_USER_TOKEN' : \n        case 'SET_USER_RETRIEVE_TOKEN' :\n        const user = jwtdecode(action.token)\n        console.log(\"after refresh : \",user)\n        return {\n            ...tokenState,\n            userToken : action.token,\n            userName : user.userName,\n            _id : user.id\n        }\n        case 'DELETE_USER_TOKEN' : localStorage.removeItem(\"usersToken\")\n        return {\n            ...tokenState,\n            tokeoken : '',\n            userName : '',\n            _id : ''\n        }\n        default : return state\n    }\n}\n\nexport {\n    authReducer,\n    tokenReducer\n}"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAG,KADS;EAEjBC,MAAM,EAAG,KAFQ;EAGjBC,IAAI,EAAG,IAHU;EAIjBC,UAAU,EAAG;AAJI,CAArB;AAMA,MAAMC,UAAU,GAAG;EACfC,SAAS,EAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CADG;EAEfC,QAAQ,EAAG,EAFI;EAGfC,GAAG,EAAG,EAHS;EAIfC,UAAU,EAAGJ,YAAY,CAACC,OAAb,CAAqB,OAArB;AAJE,CAAnB,C,CAMA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMI,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBb,YAAyB;EAAA,IAAXc,MAAW;;EAClD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,YAAL;MAAoB,OAAO,EACvB,GAAGF,KADoB;QAEvBX,MAAM,EAAG;MAFc,CAAP;;IAIpB,KAAK,aAAL;MAAqB,OAAO,EACxB,GAAGW,KADqB;QAExBX,MAAM,EAAG;MAFe,CAAP;;IAIrB,KAAK,eAAL;MAAuB,OAAO,EAC1B,GAAGW,KADuB;QAE1BX,MAAM,EAAG,CAAEW,KAAK,CAACX;MAFS,CAAP;;IAIvB,KAAK,iBAAL;MAAyB,OAAO,EAC5B,GAAGW,KADyB;QAE5BT,UAAU,EAAG;MAFe,CAAP;;IAIzB,KAAK,kBAAL;MAA0B,OAAO,EAC7B,GAAGS,KAD0B;QAE7BT,UAAU,EAAG;MAFgB,CAAP;;IAI1B;MAAU,OAAOS,KAAP;EArBd;AAuBH,CAxBD;;AAyBA,MAAMG,YAAY,GAAG,YAAgC;EAAA,IAA/BH,KAA+B,uEAAvBR,UAAuB;EAAA,IAAXS,MAAW;;EACjD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,gBAAL;IACA,KAAK,yBAAL;MACA,MAAMZ,IAAI,GAAGJ,SAAS,CAACe,MAAM,CAACG,KAAR,CAAtB;MACAC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BhB,IAA/B;MACA,OAAO,EACH,GAAGE,UADA;QAEHC,SAAS,EAAGQ,MAAM,CAACG,KAFhB;QAGHR,QAAQ,EAAGN,IAAI,CAACM,QAHb;QAIHC,GAAG,EAAGP,IAAI,CAACiB;MAJR,CAAP;;IAMA,KAAK,mBAAL;MAA2Bb,YAAY,CAACc,UAAb,CAAwB,YAAxB;MAC3B,OAAO,EACH,GAAGhB,UADA;QAEHiB,QAAQ,EAAG,EAFR;QAGHb,QAAQ,EAAG,EAHR;QAIHC,GAAG,EAAG;MAJH,CAAP;;IAMA;MAAU,OAAOG,KAAP;EAlBd;AAoBH,CArBD;;AAuBA,SACID,WADJ,EAEII,YAFJ"},"metadata":{},"sourceType":"module"}