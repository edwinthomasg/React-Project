{"ast":null,"code":"var _jsxFileName = \"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/Auth.js\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useStyles } from '../../styles/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setSignOut, toggleSignup } from '../redux/SignupActions';\nimport { storeUserToken } from '../redux/UserActions';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet inputFieldStyles = {\n  width: '100%'\n};\n\nconst Login = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm();\n  const signup = useSelector(state => state.signUp.signup);\n  const [userCredentials, setUserCredentials] = useState({\n    userName: '',\n    userEmail: '',\n    userPassword: '',\n    userConfirmPassword: '',\n    userContact: ''\n  });\n  const classes = useStyles();\n\n  const changeCredentialHandler = event => {\n    setUserCredentials(prevState => ({ ...prevState,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const signupHandler = () => {\n    dispatch(toggleSignup());\n  };\n\n  const submitHandler = data => {\n    console.log(\"data : \", data);\n\n    if (signup) {\n      dispatch(storeUserToken(userCredentials, 'signup'));\n      dispatch(setSignOut());\n      navigate('/auth');\n    } else {\n      dispatch(storeUserToken(userCredentials));\n      navigate('/home', {\n        replace: true\n      });\n    }\n  };\n\n  console.log(\"errors : \", errors);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submitHandler),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.loginForm,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          padding: 1,\n          variant: \"h4\",\n          textAlign: \"center\",\n          children: signup ? \"Signup\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), signup && /*#__PURE__*/_jsxDEV(TextField, { ...register('userName', {\n            required: 'Username required',\n            pattern: {\n              value: /^[a-zA-Z ]+$/,\n              message: 'Username should contain only alphabets'\n            },\n            minLength: {\n              value: 3,\n              message: 'Username should contain atleast 3 letters'\n            }\n          }),\n          type: 'text',\n          value: userCredentials.userName,\n          style: inputFieldStyles,\n          onChange: changeCredentialHandler,\n          placeholder: \"Username\",\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }, this), errors.userName && /*#__PURE__*/_jsxDEV(\"small\", {\n          children: errors.userName.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: 'email',\n          ...register('userEmail', {\n            required: 'Email required',\n            pattern: {\n              value: /^([a-z]+[\\.-\\d]*)@([a-z-]+)\\.([a-z\\-]{2,8})(\\.[a-z]{2,8})?$/,\n              message: 'Invalid email format'\n            }\n          }),\n          value: userCredentials.userEmail,\n          style: inputFieldStyles,\n          onChange: changeCredentialHandler,\n          placeholder: \"EmailID\",\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), errors.userEmail && /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Email required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: 'password',\n          ...register('userPassword', {\n            required: 'Password required'\n          }),\n          value: userCredentials.userPassword,\n          style: inputFieldStyles,\n          onChange: changeCredentialHandler,\n          placeholder: \"Password\",\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), errors.userPassword && /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Password required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 36\n        }, this), signup && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: 'password',\n            ...register('userConfirmPassword', {\n              required: 'Confirm Password required'\n            }),\n            value: userCredentials.userConfirmPassword,\n            style: inputFieldStyles,\n            onChange: changeCredentialHandler,\n            placeholder: \"Confirm Password\",\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), errors.userConfirmPassword && /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Confirm Password required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: 'text',\n            ...register('userContact', {\n              required: 'Contact required'\n            }),\n            value: userCredentials.userContact,\n            style: inputFieldStyles,\n            onChange: changeCredentialHandler,\n            placeholder: \"Contact Number\",\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), errors.userContact && /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Contact required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"warning\",\n          style: {\n            margin: '5% 0'\n          },\n          children: signup ? \"Signup\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), !signup && /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Dont't have an account ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          onClick: signupHandler,\n          to: \"/auth\",\n          children: !signup && \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"UgflkxNvatZuVJ/0+K3c7cSyCxk=\", false, function () {\n  return [useNavigate, useDispatch, useForm, useSelector, useStyles];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Button","TextField","Typography","Box","React","useState","Link","useNavigate","useStyles","useSelector","useDispatch","setSignOut","toggleSignup","storeUserToken","useForm","inputFieldStyles","width","Login","navigate","dispatch","register","handleSubmit","formState","errors","reset","signup","state","signUp","userCredentials","setUserCredentials","userName","userEmail","userPassword","userConfirmPassword","userContact","classes","changeCredentialHandler","event","prevState","target","name","value","signupHandler","submitHandler","data","console","log","replace","loginForm","required","pattern","message","minLength","margin"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/user/Auth.js"],"sourcesContent":["import { Button, TextField, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { useStyles } from '../../styles/styles'\nimport { useSelector ,useDispatch } from 'react-redux'\nimport { setSignOut, toggleSignup } from '../redux/SignupActions'\nimport { storeUserToken } from '../redux/UserActions'\nimport { useForm } from 'react-hook-form'\n\n let inputFieldStyles = {\n  width : '100%'\n }\n\nconst Login = () => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const { register, handleSubmit, formState : {errors}, reset} = useForm()\n    const signup = useSelector( state => state.signUp.signup )\n    \n    const [ userCredentials, setUserCredentials] = useState({\n      userName : '',\n      userEmail : '',\n      userPassword : '',\n      userConfirmPassword : '',\n      userContact : ''\n    })\n    const classes = useStyles()\n    const changeCredentialHandler = (event) => {\n      setUserCredentials((prevState) => ({\n        ...prevState,\n        [event.target.name] : event.target.value\n      }))\n    }\n    const signupHandler = () => {\n      dispatch(toggleSignup())\n    }\n    const submitHandler = (data) => {\n  \n      console.log(\"data : \",data)\n      if(signup)\n      {\n        dispatch(storeUserToken(userCredentials, 'signup'))  \n        dispatch(setSignOutn        navigate('/auth')\n      }\n      else{\n        dispatch(storeUserToken(userCredentials))\n        navigate('/home',{replace : true})\n      }\n    }\n    console.log(\"errors : \",errors)\n    return(<>\n      <form  onSubmit={ handleSubmit(submitHandler) }>\n        <Box className = {classes.loginForm}>\n          <Typography padding={1} variant='h4' textAlign=\"center\">\n            { signup ? \"Signup\" : \"Login\" }\n          </Typography>\n          { signup && <TextField {...register('userName',{ required : 'Username required', \n            pattern : {\n              value : /^[a-zA-Z ]+$/,\n              message : 'Username should contain only alphabets'\n            },\n            minLength : {\n            value : 3,\n            message : 'Username should contain atleast 3 letters'\n          }})} type={'text'} value={userCredentials.userName} style={inputFieldStyles} onChange={changeCredentialHandler} placeholder='Username' margin='normal' />  }\n          { errors.userName && <small>{errors.userName.message}</small>}\n          <TextField type={'email'} {...register('userEmail',{ required : 'Email required',\n           pattern : {\n             value : /^([a-z]+[\\.-\\d]*)@([a-z-]+)\\.([a-z\\-]{2,8})(\\.[a-z]{2,8})?$/,\n             message : 'Invalid email format'\n           }\n          })} value={userCredentials.userEmail} style={inputFieldStyles} onChange={changeCredentialHandler} placeholder='EmailID' margin='normal' />\n          { errors.userEmail && <small>Email required</small>}\n          <TextField type={'password'} {...register('userPassword',{ required : 'Password required',\n          })} value={userCredentials.userPassword} style={inputFieldStyles} onChange={changeCredentialHandler} placeholder='Password' margin='normal' />\n          { errors.userPassword && <small>Password required</small>}\n          {\n            signup && <><TextField type={'password'} {...register('userConfirmPassword',{ required : 'Confirm Password required'})} value={userCredentials.userConfirmPassword} style={inputFieldStyles} onChange={changeCredentialHandler} placeholder='Confirm Password' margin='normal' />\n            { errors.userConfirmPassword && <small>Confirm Password required</small>}\n            <TextField type={'text'} {...register('userContact',{ required : 'Contact required'})} value={userCredentials.userContact} style={inputFieldStyles} onChange={changeCredentialHandler} placeholder='Contact Number' margin='normal' />\n            { errors.userContact && <small>Contact required</small>}\n            </>\n          }\n          <Button type='submit' variant='contained' color='warning' style={{margin : '5% 0'}}>{ signup ? \"Signup\" : \"Login\" }</Button>\n          { !signup && <Typography>Dont't have an account ?</Typography> }\n          <Link onClick={signupHandler} to='/auth'>{ !signup && \"Signup\"}</Link>\n        </Box>\n      </form>\n    </>)\n }\n\n export default Login"],"mappings":"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"},"metadata":{},"sourceType":"module"}