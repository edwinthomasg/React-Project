{"ast":null,"code":"import axios from \"axios\";\nimport { SET_SHOW, SET_BOOKING_STATUS, SET_SEAT_ERROR, CLEAR_SEAT_ERROR } from \"./ActionTypes\";\nimport { ShowBase } from \"../api/BaseUrl\";\nimport { axiosUserInstance } from \"../api/Interceptors\";\n\nconst setShow = dates => {\n  return {\n    type: SET_SHOW,\n    payload: dates\n  };\n};\n\nconst setBooking = message => {\n  return {\n    type: SET_BOOKING_STATUS,\n    payload: message\n  };\n};\n\nconst setSeatError = message => {\n  return {\n    type: SET_SEAT_ERROR,\n    payload: message\n  };\n};\n\nconst clearSeatError = () => {\n  return {\n    type: CLEAR_SEAT_ERROR\n  };\n};\n/**To fetch all the show available for the movie id received */\n\n\nconst viewShow = movieId => {\n  return dispatch => {\n    axios.get(`${ShowBase}/${movieId}`).then(show => {\n      dispatch(setShow(show.data.showAvailableDates));\n    }).catch(err => console.log(err));\n  };\n};\n/**To  */\n\n\nconst bookShow = bookingDetails => {\n  return dispatch => {\n    axiosUserInstance({\n      url: `shows/book`,\n      method: \"post\",\n      data: bookingDetails\n    }).then(book => {\n      dispatch(setBooking(book.data.message));\n    }).catch(err => {\n      if (err.response.status === 400) {\n        dispatch(setSeatError(err.response.data.errorMessage));\n      }\n    });\n  };\n};\n\nexport { viewShow, bookShow, clearSeatError };","map":{"version":3,"names":["axios","SET_SHOW","SET_BOOKING_STATUS","SET_SEAT_ERROR","CLEAR_SEAT_ERROR","ShowBase","axiosUserInstance","setShow","dates","type","payload","setBooking","message","setSeatError","clearSeatError","viewShow","movieId","dispatch","get","then","show","data","showAvailableDates","catch","err","console","log","bookShow","bookingDetails","url","method","book","response","status","errorMessage"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/ShowActions.js"],"sourcesContent":["import axios from \"axios\"\nimport { SET_SHOW, SET_BOOKING_STATUS, SET_SEAT_ERROR, CLEAR_SEAT_ERROR } from \"./ActionTypes\"\nimport { ShowBase } from \"../api/BaseUrl\"\nimport { axiosUserInstance } from \"../api/Interceptors\"\n\nconst setShow = (dates) => {\n    return {\n        type : SET_SHOW,\n        payload : dates\n    }\n}\nconst setBooking = (message) => {\n    return {\n        type : SET_BOOKING_STATUS,\n        payload : message\n    }\n}\nconst setSeatError = (message) => {\n    return {\n        type : SET_SEAT_ERROR,\n        payload : message\n    }\n}\nconst clearSeatError = () => {\n    return {\n        type : CLEAR_SEAT_ERROR\n    }\n}\n/**To fetch all the show available for the movie id received */\nconst viewShow = (movieId) => {\n    return(dispatch) => {\n        axios.get(`${ShowBase}/${movieId}`)\n        .then((show) => {\n            dispatch(setShow(show.data.showAvailableDates))\n        })\n        .catch((err) => console.log(err))\n    }\n}\n/**To  */\nconst bookShow = (bookingDetails) => {\n    return(dispatch) =>\n    {\n        axiosUserInstance({\n            url: `shows/book`,\n            method: \"post\",\n            data : bookingDetails\n        }) \n    .then( book => {\n        dispatch(setBooking(book.data.message))\n    })\n    .catch(err => {\n        if(err.response.status === 400)\n        {\n            dispatch(setSeatError(err.response.data.errorMessage))\n        }\n    })}\n}\nexport {\n    viewShow,\n    bookShow,\n    clearSeatError\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,kBAAnB,EAAuCC,cAAvC,EAAuDC,gBAAvD,QAA+E,eAA/E;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EACvB,OAAO;IACHC,IAAI,EAAGR,QADJ;IAEHS,OAAO,EAAGF;EAFP,CAAP;AAIH,CALD;;AAMA,MAAMG,UAAU,GAAIC,OAAD,IAAa;EAC5B,OAAO;IACHH,IAAI,EAAGP,kBADJ;IAEHQ,OAAO,EAAGE;EAFP,CAAP;AAIH,CALD;;AAMA,MAAMC,YAAY,GAAID,OAAD,IAAa;EAC9B,OAAO;IACHH,IAAI,EAAGN,cADJ;IAEHO,OAAO,EAAGE;EAFP,CAAP;AAIH,CALD;;AAMA,MAAME,cAAc,GAAG,MAAM;EACzB,OAAO;IACHL,IAAI,EAAGL;EADJ,CAAP;AAGH,CAJD;AAKA;;;AACA,MAAMW,QAAQ,GAAIC,OAAD,IAAa;EAC1B,OAAOC,QAAD,IAAc;IAChBjB,KAAK,CAACkB,GAAN,CAAW,GAAEb,QAAS,IAAGW,OAAQ,EAAjC,EACCG,IADD,CACOC,IAAD,IAAU;MACZH,QAAQ,CAACV,OAAO,CAACa,IAAI,CAACC,IAAL,CAAUC,kBAAX,CAAR,CAAR;IACH,CAHD,EAICC,KAJD,CAIQC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJhB;EAKH,CAND;AAOH,CARD;AASA;;;AACA,MAAMG,QAAQ,GAAIC,cAAD,IAAoB;EACjC,OAAOX,QAAD,IACN;IACIX,iBAAiB,CAAC;MACduB,GAAG,EAAG,YADQ;MAEdC,MAAM,EAAE,MAFM;MAGdT,IAAI,EAAGO;IAHO,CAAD,CAAjB,CAKHT,IALG,CAKGY,IAAI,IAAI;MACXd,QAAQ,CAACN,UAAU,CAACoB,IAAI,CAACV,IAAL,CAAUT,OAAX,CAAX,CAAR;IACH,CAPG,EAQHW,KARG,CAQGC,GAAG,IAAI;MACV,IAAGA,GAAG,CAACQ,QAAJ,CAAaC,MAAb,KAAwB,GAA3B,EACA;QACIhB,QAAQ,CAACJ,YAAY,CAACW,GAAG,CAACQ,QAAJ,CAAaX,IAAb,CAAkBa,YAAnB,CAAb,CAAR;MACH;IACJ,CAbG;EAaD,CAfH;AAgBH,CAjBD;;AAkBA,SACInB,QADJ,EAEIY,QAFJ,EAGIb,cAHJ"},"metadata":{},"sourceType":"module"}