{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport useEventCallback from '../utils/useEventCallback';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport NoSsr from '../NoSsr';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\nvar disableSwipeToOpenDefault = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = React.forwardRef(function SwipeableDrawer(props, ref) {\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? disableSwipeToOpenDefault : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      ModalPropsProp = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n\n  var theme = useTheme();\n\n  var _React$useState = React.useState(false),\n      maybeSwiping = _React$useState[0],\n      setMaybeSwiping = _React$useState[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  var calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = getAnchor(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = isHorizontal(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = useEventCallback(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontal = isHorizontal(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = useEventCallback(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches); // We don't know yet.\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = useEventCallback(function (event) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (event.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (event.muiHandled) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (!open) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    event.muiHandled = true;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      document.body.addEventListener('touchstart', handleBodyTouchStart);\n      document.body.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      document.body.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        document.body.removeEventListener('touchstart', handleBodyTouchStart);\n        document.body.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        document.body.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handlePaperRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    paperRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Drawer, _extends({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: _extends({\n      BackdropProps: _extends({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: _extends({}, PaperProps, {\n      style: _extends({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: handlePaperRef\n    }),\n    anchor: anchor,\n    transitionDuration: calculatedDurationRef.current || transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && React.createElement(NoSsr, null, React.createElement(SwipeArea, _extends({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * Props applied to the swipe area element.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","PropTypes","ReactDOM","elementTypeAcceptingRef","Drawer","getAnchor","isHorizontal","useEventCallback","duration","useTheme","getTransitionProps","NoSsr","SwipeArea","UNCERTAINTY_THRESHOLD","calculateCurrentX","anchor","touches","document","body","offsetWidth","pageX","calculateCurrentY","window","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","disableSwipeToOpenDefault","navigator","test","userAgent","transitionDurationDefault","enter","enteringScreen","exit","leavingScreen","useEnhancedEffect","useLayoutEffect","useEffect","SwipeableDrawer","forwardRef","props","ref","_props$anchor","_props$disableBackdro","disableBackdropTransition","_props$disableDiscove","disableDiscovery","_props$disableSwipeTo","disableSwipeToOpen","hideBackdrop","_props$hysteresis","hysteresis","_props$minFlingVeloci","minFlingVelocity","_props$ModalProps","ModalProps","BackdropProps","ModalPropsProp","onClose","onOpen","_props$PaperProps","PaperProps","SwipeAreaProps","_props$swipeAreaWidth","swipeAreaWidth","_props$transitionDura","transitionDuration","_props$variant","variant","other","theme","_React$useState","useState","maybeSwiping","setMaybeSwiping","swipeInstance","useRef","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","current","setPosition","useCallback","translate","options","arguments","length","undefined","_options$mode","mode","_options$changeTransi","changeTransition","anchorRtl","rtlTranslateMultiplier","indexOf","transform","concat","drawerStyle","style","webkitTransform","transition","transitions","create","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","event","horizontal","changedTouches","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","dx","dy","cancelable","preventDefault","definitelySwiping","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","muiHandled","target","addEventListener","passive","removeEventListener","handleBackdropRef","instance","findDOMNode","handlePaperRef","createElement","Fragment","pointerEvents","width","process","env","NODE_ENV","propTypes","oneOf","children","node","bool","number","shape","component","func","isRequired","object","oneOfType"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeableDrawer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport useEventCallback from '../utils/useEventCallback';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport NoSsr from '../NoSsr';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\nvar disableSwipeToOpenDefault = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = React.forwardRef(function SwipeableDrawer(props, ref) {\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? disableSwipeToOpenDefault : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      ModalPropsProp = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n\n  var theme = useTheme();\n\n  var _React$useState = React.useState(false),\n      maybeSwiping = _React$useState[0],\n      setMaybeSwiping = _React$useState[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  var calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = getAnchor(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = isHorizontal(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = useEventCallback(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontal = isHorizontal(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = useEventCallback(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches); // We don't know yet.\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = useEventCallback(function (event) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (event.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (event.muiHandled) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (!open) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    event.muiHandled = true;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      document.body.addEventListener('touchstart', handleBodyTouchStart);\n      document.body.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      document.body.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        document.body.removeEventListener('touchstart', handleBodyTouchStart);\n        document.body.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        document.body.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handlePaperRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    paperRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Drawer, _extends({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: _extends({\n      BackdropProps: _extends({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: _extends({}, PaperProps, {\n      style: _extends({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: handlePaperRef\n    }),\n    anchor: anchor,\n    transitionDuration: calculatedDurationRef.current || transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && React.createElement(NoSsr, null, React.createElement(SwipeArea, _extends({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * Props applied to the swipe area element.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}