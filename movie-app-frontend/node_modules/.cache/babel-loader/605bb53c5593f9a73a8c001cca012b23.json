{"ast":null,"code":"import axios from \"axios\";\nimport { axiosUserInstance } from \"../api/Interceptors\";\nimport { SET_BOOKING, SET_BOOKINGS, SET_BOOKING_ERROR, CLEAR_BOOKING, CLEAR_BOOKING_ERROR } from \"./ActionTypes\";\nimport { axiosAdminInstance } from \"../api/Interceptors\";\n\nconst setBooking = booking => {\n  return {\n    type: SET_BOOKING,\n    payload: booking\n  };\n};\n\nconst setBookings = bookings => {\n  return {\n    type: SET_BOOKINGS,\n    payload: bookings\n  };\n};\n\nconst setBookingError = error => {\n  return {\n    type: SET_BOOKING_ERROR,\n    payload: error\n  };\n};\n\nconst clearBooking = () => {\n  return {\n    type: CLEAR_BOOKING\n  };\n};\n\nconst clearBookingError = () => {\n  return {\n    type: CLEAR_BOOKING_ERROR\n  };\n};\n/**To view  */\n\n\nconst viewBooking = userId => {\n  return dispatch => {\n    axiosUserInstance({\n      url: `bookings/${userId}`,\n      method: \"get\"\n    }).then(book => {\n      dispatch(setBooking(book.data.bookings));\n    }).catch(error => {\n      dispatch(setBookingError(error.response.data.errorMessage));\n    });\n  };\n};\n\nconst viewAllBookings = () => {\n  return dispatch => {\n    axiosAdminInstance({\n      url: `bookings`,\n      method: \"get\"\n    }).then(bookings => {\n      dispatch(setBookings(bookings.data.bookings));\n    }).catch(err => console.log(\"err : \", err));\n  };\n};\n\nexport { viewBooking, viewAllBookings, clearBooking, clearBookingError };","map":{"version":3,"names":["axios","axiosUserInstance","SET_BOOKING","SET_BOOKINGS","SET_BOOKING_ERROR","CLEAR_BOOKING","CLEAR_BOOKING_ERROR","axiosAdminInstance","setBooking","booking","type","payload","setBookings","bookings","setBookingError","error","clearBooking","clearBookingError","viewBooking","userId","dispatch","url","method","then","book","data","catch","response","errorMessage","viewAllBookings","err","console","log"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/BookActions.js"],"sourcesContent":["import axios from \"axios\"\nimport { axiosUserInstance } from \"../api/Interceptors\"\nimport { SET_BOOKING, SET_BOOKINGS, SET_BOOKING_ERROR, CLEAR_BOOKING, CLEAR_BOOKING_ERROR } from \"./ActionTypes\"\nimport { axiosAdminInstance } from \"../api/Interceptors\"\n\nconst setBooking = (booking) => {\n    return {\n        type : SET_BOOKING,\n        payload : booking\n    }\n}\nconst setBookings = (bookings) =>  {\n    return {\n    type : SET_BOOKINGS,\n    payload : bookings\n    }\n}\nconst setBookingError = (error) => {\n    return {\n        type : SET_BOOKING_ERROR,\n        payload : error\n    }\n}\nconst clearBooking = () => {\n    return {\n        type : CLEAR_BOOKING,\n    }\n}\nconst clearBookingError = () => {\n    return {\n        type : CLEAR_BOOKING_ERROR\n    }\n}\n/**To view  */\nconst viewBooking = (userId) => {\n    return(dispatch) => {\n        axiosUserInstance({\n            url: `bookings/${userId}`,\n            method: \"get\"\n        })\n        .then(book => {\n            dispatch(setBooking(book.data.bookings))\n        })\n        .catch(error => {\n            dispatch(setBookingError(error.response.data.errorMessage))\n        })\n    }\n}\nconst viewAllBookings = () => {\n    return(dispatch) => {\n        axiosAdminInstance({\n            url: `bookings`,\n            method: \"get\"\n        })\n        .then( bookings => {\n            dispatch(setBookings(bookings.data.bookings))\n        })\n        .catch((err) => console.log(\"err : \",err))\n    }\n}\n\nexport {\n    viewBooking,\n    viewAllBookings,\n    clearBooking,\n    clearBookingError\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,iBAApC,EAAuDC,aAAvD,EAAsEC,mBAAtE,QAAiG,eAAjG;AACA,SAASC,kBAAT,QAAmC,qBAAnC;;AAEA,MAAMC,UAAU,GAAIC,OAAD,IAAa;EAC5B,OAAO;IACHC,IAAI,EAAGR,WADJ;IAEHS,OAAO,EAAGF;EAFP,CAAP;AAIH,CALD;;AAMA,MAAMG,WAAW,GAAIC,QAAD,IAAe;EAC/B,OAAO;IACPH,IAAI,EAAGP,YADA;IAEPQ,OAAO,EAAGE;EAFH,CAAP;AAIH,CALD;;AAMA,MAAMC,eAAe,GAAIC,KAAD,IAAW;EAC/B,OAAO;IACHL,IAAI,EAAGN,iBADJ;IAEHO,OAAO,EAAGI;EAFP,CAAP;AAIH,CALD;;AAMA,MAAMC,YAAY,GAAG,MAAM;EACvB,OAAO;IACHN,IAAI,EAAGL;EADJ,CAAP;AAGH,CAJD;;AAKA,MAAMY,iBAAiB,GAAG,MAAM;EAC5B,OAAO;IACHP,IAAI,EAAGJ;EADJ,CAAP;AAGH,CAJD;AAKA;;;AACA,MAAMY,WAAW,GAAIC,MAAD,IAAY;EAC5B,OAAOC,QAAD,IAAc;IAChBnB,iBAAiB,CAAC;MACdoB,GAAG,EAAG,YAAWF,MAAO,EADV;MAEdG,MAAM,EAAE;IAFM,CAAD,CAAjB,CAICC,IAJD,CAIMC,IAAI,IAAI;MACVJ,QAAQ,CAACZ,UAAU,CAACgB,IAAI,CAACC,IAAL,CAAUZ,QAAX,CAAX,CAAR;IACH,CAND,EAOCa,KAPD,CAOOX,KAAK,IAAI;MACZK,QAAQ,CAACN,eAAe,CAACC,KAAK,CAACY,QAAN,CAAeF,IAAf,CAAoBG,YAArB,CAAhB,CAAR;IACH,CATD;EAUH,CAXD;AAYH,CAbD;;AAcA,MAAMC,eAAe,GAAG,MAAM;EAC1B,OAAOT,QAAD,IAAc;IAChBb,kBAAkB,CAAC;MACfc,GAAG,EAAG,UADS;MAEfC,MAAM,EAAE;IAFO,CAAD,CAAlB,CAICC,IAJD,CAIOV,QAAQ,IAAI;MACfO,QAAQ,CAACR,WAAW,CAACC,QAAQ,CAACY,IAAT,CAAcZ,QAAf,CAAZ,CAAR;IACH,CAND,EAOCa,KAPD,CAOQI,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,GAArB,CAPhB;EAQH,CATD;AAUH,CAXD;;AAaA,SACIZ,WADJ,EAEIW,eAFJ,EAGIb,YAHJ,EAIIC,iBAJJ"},"metadata":{},"sourceType":"module"}