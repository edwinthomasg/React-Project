{"ast":null,"code":"import { SET_MOVIE, VIEW_MOVIE, VIEW_MOVIES } from \"./ActionTypes\";\nimport axios from 'axios';\nimport { MovieBase } from \"../api/BaseUrl\";\nimport { axiosAdminInstance } from \"../api/Interceptors\";\n\nconst setSingleMovie = movie => {\n  return {\n    type: VIEW_MOVIE,\n    payload: movie\n  };\n};\n\nconst setMovies = movies => {\n  return {\n    type: VIEW_MOVIES,\n    payload: movies\n  };\n};\n\nconst getMovies = () => {\n  axios.get(`${MovieBase}`).then(movies => {\n    setMovies(movies.data.movies);\n  }).catch(err => console.log(err));\n};\n\nconst addMovies = movieDetails => {\n  return dispatch => {\n    axiosAdminInstance({\n      url: `movies`,\n      method: \"post\",\n      data: movieDetails\n    }).then(movie => {\n      dispatch(setMovie(movie.data.movie));\n    }).catch(err => console.log(\"error : \", err));\n  };\n};\n\nconst viewMovie = movieId => {\n  return dispatch => {\n    axios.get(`${MovieBase}/${movieId}`).then(movie => {\n      dispatch(setSingleMovie(movie.data.movie));\n    }).catch(err => console.log(err));\n  };\n};\n\nconst deleteMovie = movieId => {\n  return () => {\n    axiosAdminInstance({\n      url: `movies/${movieId}`,\n      method: \"delete\"\n    }).then(message => console.log(message)).catch(err => console.log(err));\n  };\n};\n\nconst updateMovie = (movieDetails, movieId) => {\n  return dispatch => {\n    axiosAdminInstance({\n      url: `movies/${movieId}`,\n      method: \"put\",\n      data: movieDetails\n    }).then(() => {\n      dispatch(setMovie(movieDetails));\n    }).catch(err => console.log(err));\n  };\n};\n\nexport { addMovies, viewMovie, deleteMovie, updateMovie };","map":{"version":3,"names":["SET_MOVIE","VIEW_MOVIE","VIEW_MOVIES","axios","MovieBase","axiosAdminInstance","setSingleMovie","movie","type","payload","setMovies","movies","getMovies","get","then","data","catch","err","console","log","addMovies","movieDetails","dispatch","url","method","setMovie","viewMovie","movieId","deleteMovie","message","updateMovie"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/MovieActions.js"],"sourcesContent":["import { SET_MOVIE, VIEW_MOVIE, VIEW_MOVIES } from \"./ActionTypes\"\nimport axios from 'axios'\nimport { MovieBase } from \"../api/BaseUrl\"\nimport { axiosAdminInstance } from \"../api/Interceptors\"\n\nconst setSingleMovie = (movie) => {\n    return {\n        type : VIEW_MOVIE,\n        payload : movie\n    }\n}\nconst setMovies = (movies) => {\n    return {\n        type : VIEW_MOVIES,\n        payload : movies\n    }\n}\nconst getMovies = () => {\n    axios.get(`${MovieBase}`)\n      .then(movies => {\n        setMovies(movies.data.movies)\n      })\n      .catch(err => console.log(err))\n  }\nconst addMovies = (movieDetails) => {\n    return(dispatch) => {\n        axiosAdminInstance({\n            url: `movies`,\n            method: \"post\",\n            data:movieDetails\n        })\n        .then(movie => { \n            dispatch(setMovie(movie.data.movie))\n        })\n        .catch( err => console.log(\"error : \",err))\n    }\n}\nconst viewMovie = (movieId) => {\n    return(dispatch) => {\n        axios.get(`${MovieBase}/${movieId}`)\n        .then(movie => {\n            dispatch(setSingleMovie(movie.data.movie))\n        })\n        .catch( err => console.log(err) )\n    }\n}\nconst deleteMovie = (movieId) => {\n    return() => {\n        axiosAdminInstance({\n            url: `movies/${movieId}`,\n            method: \"delete\"\n        })\n        .then((message) => console.log(message) )\n        .catch( (err) => console.log(err))\n    }\n}\nconst updateMovie = (movieDetails,movieId) => {\n    return(dispatch) => {\n        axiosAdminInstance({\n            url: `movies/${movieId}`,\n            method: \"put\",\n            data:movieDetails\n        })\n        .then(() => {\n            dispatch(setMovie(movieDetails))\n        })\n        .catch( err => console.log(err))\n    }\n}\nexport {\n    addMovies,\n    viewMovie,\n    deleteMovie,\n    updateMovie\n}"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,WAAhC,QAAmD,eAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,kBAAT,QAAmC,qBAAnC;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;EAC9B,OAAO;IACHC,IAAI,EAAGP,UADJ;IAEHQ,OAAO,EAAGF;EAFP,CAAP;AAIH,CALD;;AAMA,MAAMG,SAAS,GAAIC,MAAD,IAAY;EAC1B,OAAO;IACHH,IAAI,EAAGN,WADJ;IAEHO,OAAO,EAAGE;EAFP,CAAP;AAIH,CALD;;AAMA,MAAMC,SAAS,GAAG,MAAM;EACpBT,KAAK,CAACU,GAAN,CAAW,GAAET,SAAU,EAAvB,EACGU,IADH,CACQH,MAAM,IAAI;IACdD,SAAS,CAACC,MAAM,CAACI,IAAP,CAAYJ,MAAb,CAAT;EACD,CAHH,EAIGK,KAJH,CAISC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJhB;AAKD,CANH;;AAOA,MAAMG,SAAS,GAAIC,YAAD,IAAkB;EAChC,OAAOC,QAAD,IAAc;IAChBjB,kBAAkB,CAAC;MACfkB,GAAG,EAAG,QADS;MAEfC,MAAM,EAAE,MAFO;MAGfT,IAAI,EAACM;IAHU,CAAD,CAAlB,CAKCP,IALD,CAKMP,KAAK,IAAI;MACXe,QAAQ,CAACG,QAAQ,CAAClB,KAAK,CAACQ,IAAN,CAAWR,KAAZ,CAAT,CAAR;IACH,CAPD,EAQCS,KARD,CAQQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,GAAvB,CARf;EASH,CAVD;AAWH,CAZD;;AAaA,MAAMS,SAAS,GAAIC,OAAD,IAAa;EAC3B,OAAOL,QAAD,IAAc;IAChBnB,KAAK,CAACU,GAAN,CAAW,GAAET,SAAU,IAAGuB,OAAQ,EAAlC,EACCb,IADD,CACMP,KAAK,IAAI;MACXe,QAAQ,CAAChB,cAAc,CAACC,KAAK,CAACQ,IAAN,CAAWR,KAAZ,CAAf,CAAR;IACH,CAHD,EAICS,KAJD,CAIQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJf;EAKH,CAND;AAOH,CARD;;AASA,MAAMW,WAAW,GAAID,OAAD,IAAa;EAC7B,OAAM,MAAM;IACRtB,kBAAkB,CAAC;MACfkB,GAAG,EAAG,UAASI,OAAQ,EADR;MAEfH,MAAM,EAAE;IAFO,CAAD,CAAlB,CAICV,IAJD,CAIOe,OAAD,IAAaX,OAAO,CAACC,GAAR,CAAYU,OAAZ,CAJnB,EAKCb,KALD,CAKSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALjB;EAMH,CAPD;AAQH,CATD;;AAUA,MAAMa,WAAW,GAAG,CAACT,YAAD,EAAcM,OAAd,KAA0B;EAC1C,OAAOL,QAAD,IAAc;IAChBjB,kBAAkB,CAAC;MACfkB,GAAG,EAAG,UAASI,OAAQ,EADR;MAEfH,MAAM,EAAE,KAFO;MAGfT,IAAI,EAACM;IAHU,CAAD,CAAlB,CAKCP,IALD,CAKM,MAAM;MACRQ,QAAQ,CAACG,QAAQ,CAACJ,YAAD,CAAT,CAAR;IACH,CAPD,EAQCL,KARD,CAQQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARf;EASH,CAVD;AAWH,CAZD;;AAaA,SACIG,SADJ,EAEIM,SAFJ,EAGIE,WAHJ,EAIIE,WAJJ"},"metadata":{},"sourceType":"module"}