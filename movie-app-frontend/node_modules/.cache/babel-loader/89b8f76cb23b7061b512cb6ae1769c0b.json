{"ast":null,"code":"import axios from \"axios\";\nimport { SET_SHOW, SET_BOOKING_STATUS } from \"./ActionTypes\";\n\nconst setShow = dates => {\n  return {\n    type: SET_SHOW,\n    payload: dates\n  };\n};\n\nconst setBooking = message => {\n  return {\n    type: SET_BOOKING_STATUS,\n    payload: message\n  };\n};\n\nconst setSeatError = message => {\n  return {\n    type: SET_SEAT_ERROR,\n    payload: message\n  };\n};\n\nconst viewShow = movieId => {\n  return dispatch => {\n    axios.get(`http://localhost:3040/shows/${movieId}`).then(show => {\n      dispatch(setShow(show.data.showAvailableDates));\n    }).catch(err => console.log(err));\n  };\n};\n\nconst bookShow = bookingDetails => {\n  return dispatch => {\n    axios.post(`http://localhost:3040/shows/book`, bookingDetails).then(book => {\n      dispatch(setBooking(book.data));\n    }).catch(err => {\n      if (err.response.status === 400) {\n        console.log(\"error : \", err.response.data.errorMessage);\n      }\n    });\n  };\n};\n\nexport { viewShow, bookShow };","map":{"version":3,"names":["axios","SET_SHOW","SET_BOOKING_STATUS","setShow","dates","type","payload","setBooking","message","setSeatError","SET_SEAT_ERROR","viewShow","movieId","dispatch","get","then","show","data","showAvailableDates","catch","err","console","log","bookShow","bookingDetails","post","book","response","status","errorMessage"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/ShowActions.js"],"sourcesContent":["import axios from \"axios\"\nimport { SET_SHOW, SET_BOOKING_STATUS } from \"./ActionTypes\"\nconst setShow = (dates) => {\n    return {\n        type : SET_SHOW,\n        payload : dates\n    }\n}\nconst setBooking = (message) => {\n    return {\n        type : SET_BOOKING_STATUS,\n        payload : message\n    }\n}\nconst setSeatError = (message) => {\n    return {\n        type : SET_SEAT_ERROR,\n        payload : message\n    }\n}\nconst viewShow = (movieId) => {\n    return(dispatch) => {\n        axios.get(`http://localhost:3040/shows/${movieId}`)\n        .then((show) => {\n            dispatch(setShow(show.data.showAvailableDates))\n        })\n        .catch((err) => console.log(err))\n    }\n}\nconst bookShow = (bookingDetails) => {\n    return(dispatch) =>\n    { \n    axios.post(`http://localhost:3040/shows/book`,bookingDetails)\n    .then( book => {\n        dispatch(setBooking(book.data))\n    })\n    .catch(err => {\n        if(err.response.status === 400)\n        {console.log(\"error : \",err.response.data.errorMessage)}\n    })}\n}\nexport {\n    viewShow,\n    bookShow\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,kBAAnB,QAA6C,eAA7C;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EACvB,OAAO;IACHC,IAAI,EAAGJ,QADJ;IAEHK,OAAO,EAAGF;EAFP,CAAP;AAIH,CALD;;AAMA,MAAMG,UAAU,GAAIC,OAAD,IAAa;EAC5B,OAAO;IACHH,IAAI,EAAGH,kBADJ;IAEHI,OAAO,EAAGE;EAFP,CAAP;AAIH,CALD;;AAMA,MAAMC,YAAY,GAAID,OAAD,IAAa;EAC9B,OAAO;IACHH,IAAI,EAAGK,cADJ;IAEHJ,OAAO,EAAGE;EAFP,CAAP;AAIH,CALD;;AAMA,MAAMG,QAAQ,GAAIC,OAAD,IAAa;EAC1B,OAAOC,QAAD,IAAc;IAChBb,KAAK,CAACc,GAAN,CAAW,+BAA8BF,OAAQ,EAAjD,EACCG,IADD,CACOC,IAAD,IAAU;MACZH,QAAQ,CAACV,OAAO,CAACa,IAAI,CAACC,IAAL,CAAUC,kBAAX,CAAR,CAAR;IACH,CAHD,EAICC,KAJD,CAIQC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJhB;EAKH,CAND;AAOH,CARD;;AASA,MAAMG,QAAQ,GAAIC,cAAD,IAAoB;EACjC,OAAOX,QAAD,IACN;IACAb,KAAK,CAACyB,IAAN,CAAY,kCAAZ,EAA8CD,cAA9C,EACCT,IADD,CACOW,IAAI,IAAI;MACXb,QAAQ,CAACN,UAAU,CAACmB,IAAI,CAACT,IAAN,CAAX,CAAR;IACH,CAHD,EAICE,KAJD,CAIOC,GAAG,IAAI;MACV,IAAGA,GAAG,CAACO,QAAJ,CAAaC,MAAb,KAAwB,GAA3B,EACA;QAACP,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,GAAG,CAACO,QAAJ,CAAaV,IAAb,CAAkBY,YAAzC;MAAuD;IAC3D,CAPD;EAOG,CATH;AAUH,CAXD;;AAYA,SACIlB,QADJ,EAEIY,QAFJ"},"metadata":{},"sourceType":"module"}