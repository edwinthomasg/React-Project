{"ast":null,"code":"import { SET_ADMIN_TOKEN, SET_ADMIN_RETRIEVE_TOKEN, DELETE_ADMIN_TOKEN, SET_ADMIN_PROFILE, SET_ADMIN_LOGIN_ERROR } from \"./ActionTypes\";\nimport axios from 'axios';\nimport { AdminBase } from \"../api/BaseUrl\";\nimport { axiosAdminInstance } from \"../api/Interceptors\";\n\nconst setAdminToken = token => {\n  return {\n    type: SET_ADMIN_TOKEN,\n    token: token.accessToken,\n    payload: token.message\n  };\n};\n\nconst deleteAdminToken = () => {\n  return {\n    type: DELETE_ADMIN_TOKEN\n  };\n};\n\nconst setAdminRetrieveToken = token => {\n  return {\n    type: SET_ADMIN_RETRIEVE_TOKEN,\n    token\n  };\n};\n\nconst setAdminProfile = admin => {\n  return {\n    type: SET_ADMIN_PROFILE,\n    payload: admin\n  };\n};\n\nconst setAdminLoginError = error => {\n  return {\n    type: SET_ADMIN_LOGIN_ERROR,\n    payload: error\n  };\n};\n\nconst storeAdminToken = admin => {\n  return dispatch => {\n    axios.post(`${AdminBase}/login`, admin).then(token => {\n      sessionStorage.setItem(\"adminsToken\", token.data.accessToken);\n      dispatch(setAdminToken(token.data));\n    }).catch(error => {\n      if (error.response.status === 400) {\n        console.log(\"error : \", error.response.data.errorMessage);\n        dispatch(setAdminLoginError(error.response.data.errorMessage));\n      }\n    });\n  };\n};\n\nconst retrieveAdminToken = () => {\n  return (dispatch, getState) => {\n    const token = getState().admin.adminToken;\n\n    if (token) {\n      dispatch(setAdminRetrieveToken(token));\n    }\n  };\n};\n\nconst viewAdminProfile = adminId => {\n  return dispatch => {\n    axiosAdminInstance({\n      url: `admin/my-profile/${adminId}`,\n      method: \"get\"\n    }).then(admin => {\n      dispatch(setAdminProfile(admin.data.admin));\n    }).catch(err => console.log(err));\n  };\n};\n\nconst updateAdminProfile = (adminDetails, adminId) => {\n  return dispatch => {\n    axiosAdminInstance({\n      url: `admin/${adminId}`,\n      method: \"put\",\n      data: adminDetails\n    }).then(() => {\n      dispatch(setAdminProfile(adminDetails));\n    }).catch(err => console.log(\"error : \", err));\n  };\n};\n\nexport { storeAdminToken, retrieveAdminToken, deleteAdminToken, viewAdminProfile, updateAdminProfile };","map":{"version":3,"names":["SET_ADMIN_TOKEN","SET_ADMIN_RETRIEVE_TOKEN","DELETE_ADMIN_TOKEN","SET_ADMIN_PROFILE","SET_ADMIN_LOGIN_ERROR","axios","AdminBase","axiosAdminInstance","setAdminToken","token","type","accessToken","payload","message","deleteAdminToken","setAdminRetrieveToken","setAdminProfile","admin","setAdminLoginError","error","storeAdminToken","dispatch","post","then","sessionStorage","setItem","data","catch","response","status","console","log","errorMessage","retrieveAdminToken","getState","adminToken","viewAdminProfile","adminId","url","method","err","updateAdminProfile","adminDetails"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/AdminActions.js"],"sourcesContent":["import { SET_ADMIN_TOKEN, SET_ADMIN_RETRIEVE_TOKEN, DELETE_ADMIN_TOKEN, SET_ADMIN_PROFILE, SET_ADMIN_LOGIN_ERROR } from \"./ActionTypes\"\nimport axios from 'axios'\nimport { AdminBase } from \"../api/BaseUrl\"\nimport { axiosAdminInstance } from \"../api/Interceptors\"\nconst setAdminToken = (token) => {\n    return {\n        type : SET_ADMIN_TOKEN,\n        token : token.accessToken,\n        payload : token.message\n    }\n}\nconst deleteAdminToken = () => {\n    return {\n        type : DELETE_ADMIN_TOKEN\n    }\n}\nconst setAdminRetrieveToken = (token) => {\n    return {\n        type : SET_ADMIN_RETRIEVE_TOKEN,\n        token\n    }\n}\nconst setAdminProfile = (admin) => {\n    return {\n        type : SET_ADMIN_PROFILE,\n        payload : admin\n    }\n}\nconst setAdminLoginError = (error) => {\n    return {\n        type : SET_ADMIN_LOGIN_ERROR,\n        payload : error\n    }\n}\n\nconst storeAdminToken = (admin) => {\n    return(dispatch) => {\n        axios.post(`${AdminBase}/login`,admin)\n        .then( token => {\n            sessionStorage.setItem(\"adminsToken\", token.data.accessToken)\n            dispatch(setAdminToken(token.data))\n        })\n        .catch( error => {\n            if(error.response.status === 400)\n            {\n                console.log(\"error : \",error.response.data.errorMessage)\n                dispatch(setAdminLoginError(error.response.data.errorMessage))\n            }\n        })\n    }\n}\n\nconst retrieveAdminToken = () => {\n    return(dispatch, getState) => {\n        const token = getState().admin.adminToken\n        if(token){\n            dispatch(setAdminRetrieveToken(token))\n        } \n    }\n}\n\nconst viewAdminProfile = (adminId) => {\n    return(dispatch) => {\n        axiosAdminInstance({\n            url: `admin/my-profile/${adminId}`,\n            method: \"get\"\n        })\n        .then((admin) => {\n            dispatch(setAdminProfile(admin.data.admin))\n        })\n        .catch( err => console.log(err) )\n    }\n}\n\nconst updateAdminProfile = (adminDetails,adminId) => {\n    return (dispatch) => {\n        axiosAdminInstance({\n            url: `admin/${adminId}`,\n            method: \"put\",\n            data : adminDetails\n        })\n        .then(() => { \n            dispatch(setAdminProfile(adminDetails))\n        })\n        .catch( err => console.log(\"error : \",err))\n    }\n}\nexport {\n    storeAdminToken,\n    retrieveAdminToken,\n    deleteAdminToken,\n    viewAdminProfile,\n    updateAdminProfile\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}