{"ast":null,"code":"import { SET_MOVIES, SET_MOVIE, SET_UPDATED_MOVIE, SET_ADDED_MOVIE, SET_MOVIE_ERROR } from \"./ActionTypes\";\nimport axios from 'axios';\nimport { MovieBase } from \"../api/BaseUrl\";\nimport { axiosAdminInstance } from \"../api/Interceptors\";\n\nconst setMovies = movies => {\n  return {\n    type: SET_MOVIES,\n    payload: movies\n  };\n};\n\nconst setUpdatedMovie = movie => {\n  return {\n    type: SET_UPDATED_MOVIE,\n    payload: movie\n  };\n};\n\nconst setMovie = movie => {\n  return {\n    type: SET_MOVIE,\n    payload: movie\n  };\n};\n\nconst setAddedMovie = success => {\n  return {\n    type: SET_ADDED_MOVIE,\n    payload: success\n  };\n};\n\nconst setMovieError = error => {\n  return {\n    type: SET_MOVIE_ERROR,\n    payload: error\n  };\n};\n\nconst clearError = () => {\n  return {\n    type: CLEAR_MOVIE_ERROR\n  };\n};\n\nconst setCurrentMovies = movies => {\n  return {\n    type: 'SET_CURRENT_MOVIES',\n    payload: movies\n  };\n};\n\nconst viewMovies = () => {\n  return dispatch => {\n    axios.get(`${MovieBase}`).then(movies => {\n      dispatch(setMovies(movies.data.movies));\n    }).catch(err => console.log(err));\n  };\n};\n\nconst viewCurrentMovies = currentDate => {\n  return dispatch => {\n    axios.get(`${MovieBase}/today/?current=${currentDate}`).then(movies => {\n      console.log(\"Current Movies : \", movies.data);\n    }).catch(err => {\n      console.log(\"error : \", err);\n    });\n  };\n};\n\nconst addMovies = movieDetails => {\n  return dispatch => {\n    axiosAdminInstance({\n      url: `movies`,\n      method: \"post\",\n      data: movieDetails\n    }).then(movie => {\n      console.log(\"movie added : \", movie.data.message);\n      dispatch(setAddedMovie(movie.data.message));\n    }).catch(error => {\n      console.log(\"error : \", error.response.data[0].startBookingDate);\n\n      if (error.response.status === 400) {\n        if (error.response.data[0].startBookingDate !== '') dispatch(setMovieError(error.response.data[0].startBookingDate));else if (error.response.data[0].endBookingDate !== '') dispatch(setMovieError(error.response.data[0].endBookingDate));else dispatch(setMovieError(error.response.data.errorMessage));\n      }\n    });\n  };\n};\n\nconst viewMovie = movieId => {\n  return dispatch => {\n    axios.get(`${MovieBase}/${movieId}`).then(movie => {\n      dispatch(setMovie(movie.data.movie));\n    }).catch(err => console.log(err));\n  };\n};\n\nconst deleteMovie = movieId => {\n  return () => {\n    axiosAdminInstance({\n      url: `movies/${movieId}`,\n      method: \"delete\"\n    }).then(message => console.log(message)).catch(err => console.log(err));\n  };\n};\n\nconst updateMovie = (movieDetails, movieId) => {\n  return dispatch => {\n    axiosAdminInstance({\n      url: `movies/${movieId}`,\n      method: \"put\",\n      data: movieDetails\n    }).then(() => {\n      dispatch(setUpdatedMovie(movieDetails));\n    }).catch(err => console.log(err));\n  };\n};\n\nexport { addMovies, viewMovies, viewMovie, viewCurrentMovies, deleteMovie, updateMovie };","map":{"version":3,"names":["SET_MOVIES","SET_MOVIE","SET_UPDATED_MOVIE","SET_ADDED_MOVIE","SET_MOVIE_ERROR","axios","MovieBase","axiosAdminInstance","setMovies","movies","type","payload","setUpdatedMovie","movie","setMovie","setAddedMovie","success","setMovieError","error","clearError","CLEAR_MOVIE_ERROR","setCurrentMovies","viewMovies","dispatch","get","then","data","catch","err","console","log","viewCurrentMovies","currentDate","addMovies","movieDetails","url","method","message","response","startBookingDate","status","endBookingDate","errorMessage","viewMovie","movieId","deleteMovie","updateMovie"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/MovieActions.js"],"sourcesContent":["import { SET_MOVIES, SET_MOVIE, SET_UPDATED_MOVIE, SET_ADDED_MOVIE, SET_MOVIE_ERROR } from \"./ActionTypes\"\nimport axios from 'axios'\nimport { MovieBase } from \"../api/BaseUrl\"\nimport { axiosAdminInstance } from \"../api/Interceptors\"\n\nconst setMovies = (movies) => {\n    return {\n        type : SET_MOVIES,\n        payload : movies\n    }\n}\nconst setUpdatedMovie = (movie) => {\n    return {\n        type : SET_UPDATED_MOVIE,\n        payload : movie\n    }\n}\nconst setMovie = (movie) => {\n    return {\n        type : SET_MOVIE,\n        payload : movie\n    }\n}\nconst setAddedMovie = (success) => {\n    return {\n        type : SET_ADDED_MOVIE,\n        payload : success\n    }\n}\nconst setMovieError = (error) => {\n    return {\n        type : SET_MOVIE_ERROR,\n        payload : error\n    }\n}\nconst clearError = () => {\n    return {\n        type : CLEAR_MOVIE_ERROR\n    }\n}\nconst setCurrentMovies = (movies) => {\n    return {\n        type : 'SET_CURRENT_MOVIES',\n        payload : movies\n    }\n}\nconst viewMovies = () => {\n    return(dispatch) => {\n        axios.get(`${MovieBase}`)\n        .then(movies => {\n            dispatch(setMovies(movies.data.movies))\n        })\n        .catch( err => console.log(err) )\n    }\n}\nconst viewCurrentMovies = (currentDate) => {\n    return(dispatch) => {\n        axios.get(`${MovieBase}/today/?current=${currentDate}`)\n        .then(movies => {\n            console.log(\"Current Movies : \",movies.data)\n        })\n        .catch( err => {\n            console.log(\"error : \",err)\n        })\n    }\n}\nconst addMovies = (movieDetails) => {\n    return (dispatch) => {\n        axiosAdminInstance({\n            url: `movies`,\n            method: \"post\",\n            data:movieDetails\n        })\n        .then(movie => { \n            console.log(\"movie added : \",movie.data.message)\n            dispatch(setAddedMovie(movie.data.message))\n        })\n        .catch( error => {\n            console.log(\"error : \",error.response.data[0].startBookingDate)\n            \n            if(error.response.status === 400)\n                {\n                    if(error.response.data[0].startBookingDate !== '')\n                    dispatch(setMovieError(error.response.data[0].startBookingDate))\n                    else if(error.response.data[0].endBookingDate !== '')\n                    dispatch(setMovieError(error.response.data[0].endBookingDate))\n                    else\n                    dispatch(setMovieError(error.response.data.errorMessage))\n                }\n        }\n        )\n    }\n}\nconst viewMovie = (movieId) => {\n    return(dispatch) => {\n        axios.get(`${MovieBase}/${movieId}`)\n        .then(movie => {\n            dispatch(setMovie(movie.data.movie))\n        })\n        .catch( err => console.log(err) )\n    }\n}\nconst deleteMovie = (movieId) => {\n    return() => {\n        axiosAdminInstance({\n            url: `movies/${movieId}`,\n            method: \"delete\"\n        })\n        .then((message) => console.log(message) )\n        .catch( (err) => console.log(err))\n    }\n}\nconst updateMovie = (movieDetails,movieId) => {\n    return(dispatch) => {\n        axiosAdminInstance({\n            url: `movies/${movieId}`,\n            method: \"put\",\n            data:movieDetails\n        })\n        .then(() => {\n            dispatch(setUpdatedMovie(movieDetails))\n        })\n        .catch( err => console.log(err))\n    }\n}\nexport {\n    addMovies,\n    viewMovies,\n    viewMovie,\n    viewCurrentMovies,\n    deleteMovie,\n    updateMovie\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}