{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { getThemeProps, useTheme } from '@material-ui/styles'; // This variable will be true once the server-side hydration is completed.\n\nvar hydrationCompleted = false;\n\nfunction useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var theme = useTheme();\n  var props = getThemeProps({\n    theme: theme,\n    name: 'MuiUseMediaQuery',\n    props: {}\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['Material-UI: the `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // Wait for jsdom to support the match media feature.\n  // All the browsers Material-UI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _props$options = _extends({}, props, {}, options),\n      _props$options$defaul = _props$options.defaultMatches,\n      defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul,\n      _props$options$noSsr = _props$options.noSsr,\n      noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr,\n      _props$options$ssrMat = _props$options.ssrMatchMedia,\n      ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;\n\n  var _React$useState = React.useState(function () {\n    if ((hydrationCompleted || noSsr) && supportMatchMedia) {\n      return window.matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  }),\n      match = _React$useState[0],\n      setMatch = _React$useState[1];\n\n  React.useEffect(function () {\n    var active = true;\n    hydrationCompleted = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    var queryList = window.matchMedia(query);\n\n    var updateMatch = function updateMatch() {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch();\n    queryList.addListener(updateMatch);\n    return function () {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, supportMatchMedia]);\n  return match;\n}\n\nexport function testReset() {\n  hydrationCompleted = false;\n}\nexport default useMediaQuery;","map":{"version":3,"names":["_extends","React","getThemeProps","useTheme","hydrationCompleted","useMediaQuery","queryInput","options","arguments","length","undefined","theme","props","name","process","env","NODE_ENV","console","error","join","query","replace","supportMatchMedia","window","matchMedia","_props$options","_props$options$defaul","defaultMatches","_props$options$noSsr","noSsr","_props$options$ssrMat","ssrMatchMedia","_React$useState","useState","matches","match","setMatch","useEffect","active","queryList","updateMatch","addListener","removeListener","testReset"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/node_modules/@material-ui/core/esm/useMediaQuery/useMediaQuery.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { getThemeProps, useTheme } from '@material-ui/styles'; // This variable will be true once the server-side hydration is completed.\n\nvar hydrationCompleted = false;\n\nfunction useMediaQuery(queryInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var theme = useTheme();\n  var props = getThemeProps({\n    theme: theme,\n    name: 'MuiUseMediaQuery',\n    props: {}\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['Material-UI: the `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, ''); // Wait for jsdom to support the match media feature.\n  // All the browsers Material-UI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n\n  var _props$options = _extends({}, props, {}, options),\n      _props$options$defaul = _props$options.defaultMatches,\n      defaultMatches = _props$options$defaul === void 0 ? false : _props$options$defaul,\n      _props$options$noSsr = _props$options.noSsr,\n      noSsr = _props$options$noSsr === void 0 ? false : _props$options$noSsr,\n      _props$options$ssrMat = _props$options.ssrMatchMedia,\n      ssrMatchMedia = _props$options$ssrMat === void 0 ? null : _props$options$ssrMat;\n\n  var _React$useState = React.useState(function () {\n    if ((hydrationCompleted || noSsr) && supportMatchMedia) {\n      return window.matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  }),\n      match = _React$useState[0],\n      setMatch = _React$useState[1];\n\n  React.useEffect(function () {\n    var active = true;\n    hydrationCompleted = true;\n\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n\n    var queryList = window.matchMedia(query);\n\n    var updateMatch = function updateMatch() {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui-org/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n\n    updateMatch();\n    queryList.addListener(updateMatch);\n    return function () {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, supportMatchMedia]);\n  return match;\n}\n\nexport function testReset() {\n  hydrationCompleted = false;\n}\nexport default useMediaQuery;"],"mappings":"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"},"metadata":{},"sourceType":"module"}