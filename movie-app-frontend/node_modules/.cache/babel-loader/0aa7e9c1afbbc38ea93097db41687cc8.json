{"ast":null,"code":"var _jsxFileName = \"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/common/ProtectComponent.js\";\nimport jwtDecode from 'jwt-decode';\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\n/**This component will receive components as props and  */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectComponent = _ref => {\n  let {\n    role,\n    children\n  } = _ref;\n  let user, admin;\n  const userToken = sessionStorage.getItem('usersToken');\n  const adminToken = sessionStorage.getItem('adminsToken');\n\n  if (userToken) {\n    user = jwtDecode(userToken);\n    if (user.id && user.role === role) return children;\n  }\n\n  if (adminToken) {\n    admin = jwtDecode(adminToken);\n    if (admin.id && admin.role === role) return children;\n  }\n\n  if (role === 'admin') return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/admin/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);else if (role === 'user') return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/auth\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n};\n\n_c = ProtectComponent;\nexport default ProtectComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectComponent\");","map":{"version":3,"names":["jwtDecode","React","Navigate","ProtectComponent","role","children","user","admin","userToken","sessionStorage","getItem","adminToken","id"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/common/ProtectComponent.js"],"sourcesContent":["import jwtDecode from 'jwt-decode'\nimport React from 'react'\nimport { Navigate } from 'react-router-dom'\n\n/**This component will receive components as props and  */\nconst ProtectComponent = ({role, children}) => {\n    let user,admin\n    const userToken = sessionStorage.getItem('usersToken')\n    const adminToken = sessionStorage.getItem('adminsToken')\n\n    if(userToken)\n    {\n        user = jwtDecode(userToken)\n        if(user.id && user.role === role)\n        return children\n    }\n    if(adminToken)\n    {\n        admin = jwtDecode(adminToken)\n        if(admin.id && admin.role === role)\n        return children\n    }\n\n    if(role === 'admin')\n    return <Navigate to='/admin/login' replace/>\n    \n    else if(role === 'user')\n    return <Navigate to='/auth' replace/>\n    \n}\n\nexport default ProtectComponent"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA;;;;AACA,MAAMC,gBAAgB,GAAG,QAAsB;EAAA,IAArB;IAACC,IAAD;IAAOC;EAAP,CAAqB;EAC3C,IAAIC,IAAJ,EAASC,KAAT;EACA,MAAMC,SAAS,GAAGC,cAAc,CAACC,OAAf,CAAuB,YAAvB,CAAlB;EACA,MAAMC,UAAU,GAAGF,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAnB;;EAEA,IAAGF,SAAH,EACA;IACIF,IAAI,GAAGN,SAAS,CAACQ,SAAD,CAAhB;IACA,IAAGF,IAAI,CAACM,EAAL,IAAWN,IAAI,CAACF,IAAL,KAAcA,IAA5B,EACA,OAAOC,QAAP;EACH;;EACD,IAAGM,UAAH,EACA;IACIJ,KAAK,GAAGP,SAAS,CAACW,UAAD,CAAjB;IACA,IAAGJ,KAAK,CAACK,EAAN,IAAYL,KAAK,CAACH,IAAN,KAAeA,IAA9B,EACA,OAAOC,QAAP;EACH;;EAED,IAAGD,IAAI,KAAK,OAAZ,EACA,oBAAO,QAAC,QAAD;IAAU,EAAE,EAAC,cAAb;IAA4B,OAAO;EAAnC;IAAA;IAAA;IAAA;EAAA,QAAP,CADA,KAGK,IAAGA,IAAI,KAAK,MAAZ,EACL,oBAAO,QAAC,QAAD;IAAU,EAAE,EAAC,OAAb;IAAqB,OAAO;EAA5B;IAAA;IAAA;IAAA;EAAA,QAAP;AAEH,CAxBD;;KAAMD,gB;AA0BN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}