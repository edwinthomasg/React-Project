{"ast":null,"code":"import { SET_SIGNUP, SET_SIGNOUT, TOGGLE_SIGNUP, SET_ADMIN_LOGIN, SET_ADMIN_LOGOUT, SET_TOKEN, SET_RETRIEVE_TOKEN, DELETE_USER_ID } from \"./authTypes\";\nimport axios from 'axios';\n\nconst setSignUp = () => {\n  return {\n    type: SET_SIGNUP\n  };\n};\n\nconst setSignOut = () => {\n  return {\n    type: SET_SIGNOUT\n  };\n};\n\nconst toggleSignup = () => {\n  return {\n    type: TOGGLE_SIGNUP\n  };\n};\n\nconst setAdminLogin = () => {\n  return {\n    type: SET_ADMIN_LOGIN\n  };\n};\n\nconst setAdminLogout = () => {\n  return {\n    type: SET_ADMIN_LOGOUT\n  };\n};\n\nconst setToken = token => {\n  return {\n    type: SET_TOKEN,\n    token\n  };\n};\n\nconst setRetrieveToken = token => {\n  return {\n    type: SET_RETRIEVE_TOKEN,\n    token\n  };\n};\n\nconst deleteUserId = () => {\n  return {\n    type: DELETE_USER_ID\n  };\n};\n\nconst storeUserToken = function (user) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'login';\n  return (dispatch, getState) => {\n    axios.post(`http://localhost:3040/users/${type}`, user).then(token => {\n      if (type === 'login') {\n        localStorage.setItem(\"usersToken\", token.data.accessToken);\n        dispatch(setToken(token.data.accessToken));\n      }\n    }).catch(err => console.log(err.response.data, err.response.status));\n  };\n};\n\nconst retrieveToken = () => {\n  return (dispatch, getState) => {\n    const token = getState().tokener.token;\n\n    if (token) {\n      dispatch(setRetrieveToken(token));\n    }\n  };\n};\n\nexport { setSignUp, setSignOut, toggleSignup, setAdminLogin, setAdminLogout, storeUserToken, retrieveToken, deleteUserId };","map":{"version":3,"names":["SET_SIGNUP","SET_SIGNOUT","TOGGLE_SIGNUP","SET_ADMIN_LOGIN","SET_ADMIN_LOGOUT","SET_TOKEN","SET_RETRIEVE_TOKEN","DELETE_USER_ID","axios","setSignUp","type","setSignOut","toggleSignup","setAdminLogin","setAdminLogout","setToken","token","setRetrieveToken","deleteUserId","storeUserToken","user","dispatch","getState","post","then","localStorage","setItem","data","accessToken","catch","err","console","log","response","status","retrieveToken","tokener"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/authActions.js"],"sourcesContent":["import { SET_SIGNUP, SET_SIGNOUT, TOGGLE_SIGNUP, SET_ADMIN_LOGIN, SET_ADMIN_LOGOUT, SET_TOKEN, SET_RETRIEVE_TOKEN, DELETE_USER_ID } from \"./authTypes\"\nimport axios from 'axios'\n\nconst setSignUp = () => {\n    return {\n        type : SET_SIGNUP\n    }\n}\nconst setSignOut = () => {\n    return {\n        type : SET_SIGNOUT\n    }\n}\nconst toggleSignup = () => {\n    return {\n        type : TOGGLE_SIGNUP\n    }\n}\nconst setAdminLogin = () => {\n    return {\n        type : SET_ADMIN_LOGIN\n    }\n} \nconst setAdminLogout = () => {\n    return {\n        type : SET_ADMIN_LOGOUT\n    }\n} \nconst setToken = (token) => {\n    return {\n        type : SET_TOKEN,\n        token\n    }\n}\nconst setRetrieveToken = (token) => {\n    return {\n        type : SET_RETRIEVE_TOKEN,\n        token\n    }\n}\nconst deleteUserId = () => {\n    return {\n        type : DELETE_USER_ID\n    }\n}\nconst storeUserToken = (user, type = 'login') => {\n    return(dispatch,getState) => {\n        axios.post(`http://localhost:3040/users/${type}`,user)\n        .then( token => {\n            if(type === 'login')\n            {\n            localStorage.setItem(\"usersToken\", token.data.accessToken)\n            dispatch(setToken(token.data.accessToken))\n            }\n        })\n        .catch( err => console.log(err.response.data,err.response.status))\n    }\n}\nconst retrieveToken = () => {\n    return(dispatch, getState) => {\n        const token = getState().tokener.token\n        if(token){\n            dispatch(setRetrieveToken(token))\n        } \n    }\n}\nexport {\n    setSignUp,\n    setSignOut,\n    toggleSignup,\n    setAdminLogin,\n    setAdminLogout,\n    storeUserToken,\n    retrieveToken,\n    deleteUserId\n}\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC,EAAiDC,eAAjD,EAAkEC,gBAAlE,EAAoFC,SAApF,EAA+FC,kBAA/F,EAAmHC,cAAnH,QAAyI,aAAzI;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;EACpB,OAAO;IACHC,IAAI,EAAGV;EADJ,CAAP;AAGH,CAJD;;AAKA,MAAMW,UAAU,GAAG,MAAM;EACrB,OAAO;IACHD,IAAI,EAAGT;EADJ,CAAP;AAGH,CAJD;;AAKA,MAAMW,YAAY,GAAG,MAAM;EACvB,OAAO;IACHF,IAAI,EAAGR;EADJ,CAAP;AAGH,CAJD;;AAKA,MAAMW,aAAa,GAAG,MAAM;EACxB,OAAO;IACHH,IAAI,EAAGP;EADJ,CAAP;AAGH,CAJD;;AAKA,MAAMW,cAAc,GAAG,MAAM;EACzB,OAAO;IACHJ,IAAI,EAAGN;EADJ,CAAP;AAGH,CAJD;;AAKA,MAAMW,QAAQ,GAAIC,KAAD,IAAW;EACxB,OAAO;IACHN,IAAI,EAAGL,SADJ;IAEHW;EAFG,CAAP;AAIH,CALD;;AAMA,MAAMC,gBAAgB,GAAID,KAAD,IAAW;EAChC,OAAO;IACHN,IAAI,EAAGJ,kBADJ;IAEHU;EAFG,CAAP;AAIH,CALD;;AAMA,MAAME,YAAY,GAAG,MAAM;EACvB,OAAO;IACHR,IAAI,EAAGH;EADJ,CAAP;AAGH,CAJD;;AAKA,MAAMY,cAAc,GAAG,UAACC,IAAD,EAA0B;EAAA,IAAnBV,IAAmB,uEAAZ,OAAY;EAC7C,OAAM,CAACW,QAAD,EAAUC,QAAV,KAAuB;IACzBd,KAAK,CAACe,IAAN,CAAY,+BAA8Bb,IAAK,EAA/C,EAAiDU,IAAjD,EACCI,IADD,CACOR,KAAK,IAAI;MACZ,IAAGN,IAAI,KAAK,OAAZ,EACA;QACAe,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCV,KAAK,CAACW,IAAN,CAAWC,WAA9C;QACAP,QAAQ,CAACN,QAAQ,CAACC,KAAK,CAACW,IAAN,CAAWC,WAAZ,CAAT,CAAR;MACC;IACJ,CAPD,EAQCC,KARD,CAQQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAJ,CAAaN,IAAzB,EAA8BG,GAAG,CAACG,QAAJ,CAAaC,MAA3C,CARf;EASH,CAVD;AAWH,CAZD;;AAaA,MAAMC,aAAa,GAAG,MAAM;EACxB,OAAM,CAACd,QAAD,EAAWC,QAAX,KAAwB;IAC1B,MAAMN,KAAK,GAAGM,QAAQ,GAAGc,OAAX,CAAmBpB,KAAjC;;IACA,IAAGA,KAAH,EAAS;MACLK,QAAQ,CAACJ,gBAAgB,CAACD,KAAD,CAAjB,CAAR;IACH;EACJ,CALD;AAMH,CAPD;;AAQA,SACIP,SADJ,EAEIE,UAFJ,EAGIC,YAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIK,cANJ,EAOIgB,aAPJ,EAQIjB,YARJ"},"metadata":{},"sourceType":"module"}