{"ast":null,"code":"var _jsxFileName = \"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/show/Shows.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, ToggleButton, ToggleButtonGroup } from '@mui/material';\nimport { Box } from \"@mui/system\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport SeatDisplay from '../movie/SeatDisplay';\nimport { viewShow } from \"../redux/showActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Shows = () => {\n  _s();\n\n  const [display, setDisplay] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    movieId\n  } = useParams();\n  const dates = useSelector(state => state.show.shows.showAvailableDates);\n  const [date, setDate] = useState('');\n  const [toggle, setToggle] = useState('');\n\n  const tabChange = (event, newTab) => {\n    setToggle(newTab);\n  };\n\n  useEffect(() => {\n    dispatch(viewShow(movieId));\n  }, [movieId]);\n\n  const displaySeats = event => {\n    setDate(event.target.value);\n    setDisplay(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      p: 10,\n      pt: 10,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0.5,\n        children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          value: toggle,\n          onChange: tabChange,\n          exclusive: true,\n          style: {\n            marginLeft: 250,\n            marginTop: 30\n          },\n          children: dates && dates.map((date, index) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n            onClick: displaySeats,\n            value: date.showDate.substring(0, 10),\n            style: {\n              width: 200\n            },\n            children: date.showDate.substring(0, 10)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 47\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), display && /*#__PURE__*/_jsxDEV(SeatDisplay, {\n      data: {\n        selectedDate: date,\n        selectedMovieId: movieId\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Shows, \"YxSUxCO544JVDt2Y6VxdvaFah6Y=\", false, function () {\n  return [useLocation, useNavigate, useDispatch, useParams, useSelector];\n});\n\n_c = Shows;\nexport default Shows;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shows\");","map":{"version":3,"names":["Grid","ToggleButton","ToggleButtonGroup","Box","React","useEffect","useState","useDispatch","useSelector","useLocation","useNavigate","useParams","SeatDisplay","viewShow","Shows","display","setDisplay","location","navigate","dispatch","movieId","dates","state","show","shows","showAvailableDates","date","setDate","toggle","setToggle","tabChange","event","newTab","displaySeats","target","value","marginLeft","marginTop","map","index","showDate","substring","width","selectedDate","selectedMovieId"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/show/Shows.js"],"sourcesContent":["import { Grid, ToggleButton, ToggleButtonGroup } from '@mui/material'\nimport { Box } from \"@mui/system\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport SeatDisplay from '../movie/SeatDisplay';\nimport { viewShow } from \"../redux/showActions\";\n\n\nconst Shows = () => {\n  const [display, setDisplay] = useState(false)\n  const location = useLocation()\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const { movieId } = useParams()\n  const dates = useSelector(state => (state.show.shows.showAvailableDates))\n  const [date, setDate] = useState('')\n  const [toggle, setToggle] = useState('');\n  const tabChange = (event, newTab) => {\n    setToggle(newTab);\n  };\n  useEffect(() => {\n    dispatch(viewShow(movieId))\n  }, [movieId])\n \n  const displaySeats = (event) => {\n    setDate(event.target.value)\n    setDisplay(true)\n  }\n  \n  return (<>\n    <Box p={10} pt={10} >\n      <Grid container spacing={0.5}>\n        <ToggleButtonGroup value={toggle} onChange={tabChange} exclusive style={{ marginLeft: 250, marginTop: 30 }}>\n          {\n          dates && dates.map((date, index) => <ToggleButton onClick={displaySeats} key={index} value={date.showDate.substring(0,10)} style={{width:200}}>{date.showDate.substring(0,10)}\n          </ToggleButton>)\n          }\n        </ToggleButtonGroup>\n        \n      </Grid>\n    </Box>\n          {\n            display && <SeatDisplay data={{selectedDate : date, selectedMovieId : movieId }}></SeatDisplay>\n          }\n          \n  </>)\n}\n\nexport default Shows"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,YAAf,EAA6BC,iBAA7B,QAAsD,eAAtD;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAoD,kBAApD;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,QAAT,QAAyB,sBAAzB;;;;AAGA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAMW,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAMS,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAMS,QAAQ,GAAGZ,WAAW,EAA5B;EACA,MAAM;IAAEa;EAAF,IAAcT,SAAS,EAA7B;EACA,MAAMU,KAAK,GAAGb,WAAW,CAACc,KAAK,IAAKA,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiBC,kBAA5B,CAAzB;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACsB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,EAAD,CAApC;;EACA,MAAMwB,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;IACnCH,SAAS,CAACG,MAAD,CAAT;EACD,CAFD;;EAGA3B,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACN,QAAQ,CAACO,OAAD,CAAT,CAAR;EACD,CAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;EAIA,MAAMa,YAAY,GAAIF,KAAD,IAAW;IAC9BJ,OAAO,CAACI,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAP;IACAnB,UAAU,CAAC,IAAD,CAAV;EACD,CAHD;;EAKA,oBAAQ;IAAA,wBACN,QAAC,GAAD;MAAK,CAAC,EAAE,EAAR;MAAY,EAAE,EAAE,EAAhB;MAAA,uBACE,QAAC,IAAD;QAAM,SAAS,MAAf;QAAgB,OAAO,EAAE,GAAzB;QAAA,uBACE,QAAC,iBAAD;UAAmB,KAAK,EAAEY,MAA1B;UAAkC,QAAQ,EAAEE,SAA5C;UAAuD,SAAS,MAAhE;UAAiE,KAAK,EAAE;YAAEM,UAAU,EAAE,GAAd;YAAmBC,SAAS,EAAE;UAA9B,CAAxE;UAAA,UAEEhB,KAAK,IAAIA,KAAK,CAACiB,GAAN,CAAU,CAACZ,IAAD,EAAOa,KAAP,kBAAiB,QAAC,YAAD;YAAc,OAAO,EAAEN,YAAvB;YAAiD,KAAK,EAAEP,IAAI,CAACc,QAAL,CAAcC,SAAd,CAAwB,CAAxB,EAA0B,EAA1B,CAAxD;YAAuF,KAAK,EAAE;cAACC,KAAK,EAAC;YAAP,CAA9F;YAAA,UAA4GhB,IAAI,CAACc,QAAL,CAAcC,SAAd,CAAwB,CAAxB,EAA0B,EAA1B;UAA5G,GAA0CF,KAA1C;YAAA;YAAA;YAAA;UAAA,QAA3B;QAFX;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADM,EAaExB,OAAO,iBAAI,QAAC,WAAD;MAAa,IAAI,EAAE;QAAC4B,YAAY,EAAGjB,IAAhB;QAAsBkB,eAAe,EAAGxB;MAAxC;IAAnB;MAAA;MAAA;MAAA;IAAA,QAbb;EAAA,gBAAR;AAiBD,CAtCD;;GAAMN,K;UAEaL,W,EACAC,W,EACAH,W,EACGI,S,EACNH,W;;;KANVM,K;AAwCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}