{"ast":null,"code":"import { SET_LOGIN, SET_LOGOUT, SET_SIGNUP, SET_SIGNOUT, TOGGLE_SIGNUP, SET_ADMIN_LOGIN, SET_ADMIN_LOGOUT, SET_TOKEN, SET_RETRIEVE_TOKEN } from \"./authTypes\";\nimport axios from 'axios';\n\nconst setLogin = () => {\n  return {\n    type: SET_LOGIN\n  };\n};\n\nconst setLogout = () => {\n  return {\n    type: SET_LOGOUT\n  };\n};\n\nconst setSignUp = () => {\n  return {\n    type: SET_SIGNUP\n  };\n};\n\nconst setSignOut = () => {\n  return {\n    type: SET_SIGNOUT\n  };\n};\n\nconst toggleSignup = () => {\n  return {\n    type: TOGGLE_SIGNUP\n  };\n};\n\nconst setAdminLogin = () => {\n  return {\n    type: SET_ADMIN_LOGIN\n  };\n};\n\nconst setAdminLogout = () => {\n  return {\n    type: SET_ADMIN_LOGOUT\n  };\n};\n\nconst setToken = token => {\n  return {\n    type: SET_TOKEN,\n    token\n  };\n};\n\nconst setRetrieveToken = token => {\n  return {\n    type: SET_RETRIEVE_TOKEN,\n    token\n  };\n};\n\nconst storeUserToken = function (user) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'login';\n  return (dispatch, getState) => {\n    axios.post(`http://localhost:3040/users/${type}`, user).then(token => {\n      if (type === 'login') {\n        localStorage.setItem(\"usersToken\", token.data.accessToken);\n        console.log(token.data.accessToken);\n        dispatch(setToken(token.data.accessToken));\n      }\n    }).catch(err => console.log(err));\n  };\n};\n\nconst retrieveToken = () => {\n  return (dispatch, getState) => {\n    const token = getState().tokener.token;\n\n    if (token) {\n      dispatch(setRetrieveToken(token));\n    }\n  };\n};\n\nexport { setLogin, setLogout, setSignUp, setSignOut, toggleSignup, setAdminLogin, setAdminLogout, storeUserToken, retrieveToken };","map":{"version":3,"names":["SET_LOGIN","SET_LOGOUT","SET_SIGNUP","SET_SIGNOUT","TOGGLE_SIGNUP","SET_ADMIN_LOGIN","SET_ADMIN_LOGOUT","SET_TOKEN","SET_RETRIEVE_TOKEN","axios","setLogin","type","setLogout","setSignUp","setSignOut","toggleSignup","setAdminLogin","setAdminLogout","setToken","token","setRetrieveToken","storeUserToken","user","dispatch","getState","post","then","localStorage","setItem","data","accessToken","console","log","catch","err","retrieveToken","tokener"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/authActions.js"],"sourcesContent":["import { SET_LOGIN, SET_LOGOUT, SET_SIGNUP, SET_SIGNOUT, TOGGLE_SIGNUP, SET_ADMIN_LOGIN, SET_ADMIN_LOGOUT, SET_TOKEN, SET_RETRIEVE_TOKEN } from \"./authTypes\"\nimport axios from 'axios'\n\nconst setLogin = () => {\n    return {\n        type : SET_LOGIN\n    }   \n}\nconst setLogout = () => {\n    return {\n       type : SET_LOGOUT\n    }  \n}\nconst setSignUp = () => {\n    return {\n        type : SET_SIGNUP\n    }\n}\nconst setSignOut = () => {\n    return {\n        type : SET_SIGNOUT\n    }\n}\nconst toggleSignup = () => {\n    return {\n        type : TOGGLE_SIGNUP\n    }\n}\nconst setAdminLogin = () => {\n    return {\n        type : SET_ADMIN_LOGIN\n    }\n} \nconst setAdminLogout = () => {\n    return {\n        type : SET_ADMIN_LOGOUT\n    }\n} \nconst setToken = (token) => {\n    return {\n        type : SET_TOKEN,\n        token\n    }\n}\nconst setRetrieveToken = (token) => {\n    return {\n        type : SET_RETRIEVE_TOKEN,\n        token\n    }\n}\nconst storeUserToken = (user, type = 'login') => {\n    return(dispatch,getState) => {\n        axios.post(`http://localhost:3040/users/${type}`,user)\n        .then( token => {\n            if(type === 'login')\n            {\n            localStorage.setItem(\"usersToken\", token.data.accessToken)\n            console.log(token.data.accessToken)\n            dispatch(setToken(token.data.accessToken))\n            }\n        })\n        .catch( err => console.log(err) )\n    }\n}\nconst retrieveToken = () => {\n    return(dispatch, getState) => {\n        const token = getState().tokener.token\n        if(token){\n            dispatch(setRetrieveToken(token))\n        } \n    }\n}\nexport {\n    setLogin,\n    setLogout,\n    setSignUp,\n    setSignOut,\n    toggleSignup,\n    setAdminLogin,\n    setAdminLogout,\n    storeUserToken,\n    retrieveToken\n}\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,UAAhC,EAA4CC,WAA5C,EAAyDC,aAAzD,EAAwEC,eAAxE,EAAyFC,gBAAzF,EAA2GC,SAA3G,EAAsHC,kBAAtH,QAAgJ,aAAhJ;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EACnB,OAAO;IACHC,IAAI,EAAGX;EADJ,CAAP;AAGH,CAJD;;AAKA,MAAMY,SAAS,GAAG,MAAM;EACpB,OAAO;IACJD,IAAI,EAAGV;EADH,CAAP;AAGH,CAJD;;AAKA,MAAMY,SAAS,GAAG,MAAM;EACpB,OAAO;IACHF,IAAI,EAAGT;EADJ,CAAP;AAGH,CAJD;;AAKA,MAAMY,UAAU,GAAG,MAAM;EACrB,OAAO;IACHH,IAAI,EAAGR;EADJ,CAAP;AAGH,CAJD;;AAKA,MAAMY,YAAY,GAAG,MAAM;EACvB,OAAO;IACHJ,IAAI,EAAGP;EADJ,CAAP;AAGH,CAJD;;AAKA,MAAMY,aAAa,GAAG,MAAM;EACxB,OAAO;IACHL,IAAI,EAAGN;EADJ,CAAP;AAGH,CAJD;;AAKA,MAAMY,cAAc,GAAG,MAAM;EACzB,OAAO;IACHN,IAAI,EAAGL;EADJ,CAAP;AAGH,CAJD;;AAKA,MAAMY,QAAQ,GAAIC,KAAD,IAAW;EACxB,OAAO;IACHR,IAAI,EAAGJ,SADJ;IAEHY;EAFG,CAAP;AAIH,CALD;;AAMA,MAAMC,gBAAgB,GAAID,KAAD,IAAW;EAChC,OAAO;IACHR,IAAI,EAAGH,kBADJ;IAEHW;EAFG,CAAP;AAIH,CALD;;AAMA,MAAME,cAAc,GAAG,UAACC,IAAD,EAA0B;EAAA,IAAnBX,IAAmB,uEAAZ,OAAY;EAC7C,OAAM,CAACY,QAAD,EAAUC,QAAV,KAAuB;IACzBf,KAAK,CAACgB,IAAN,CAAY,+BAA8Bd,IAAK,EAA/C,EAAiDW,IAAjD,EACCI,IADD,CACOP,KAAK,IAAI;MACZ,IAAGR,IAAI,KAAK,OAAZ,EACA;QACAgB,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCT,KAAK,CAACU,IAAN,CAAWC,WAA9C;QACAC,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACU,IAAN,CAAWC,WAAvB;QACAP,QAAQ,CAACL,QAAQ,CAACC,KAAK,CAACU,IAAN,CAAWC,WAAZ,CAAT,CAAR;MACC;IACJ,CARD,EASCG,KATD,CASQC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CATf;EAUH,CAXD;AAYH,CAbD;;AAcA,MAAMC,aAAa,GAAG,MAAM;EACxB,OAAM,CAACZ,QAAD,EAAWC,QAAX,KAAwB;IAC1B,MAAML,KAAK,GAAGK,QAAQ,GAAGY,OAAX,CAAmBjB,KAAjC;;IACA,IAAGA,KAAH,EAAS;MACLI,QAAQ,CAACH,gBAAgB,CAACD,KAAD,CAAjB,CAAR;IACH;EACJ,CALD;AAMH,CAPD;;AAQA,SACIT,QADJ,EAEIE,SAFJ,EAGIC,SAHJ,EAIIC,UAJJ,EAKIC,YALJ,EAMIC,aANJ,EAOIC,cAPJ,EAQII,cARJ,EASIc,aATJ"},"metadata":{},"sourceType":"module"}