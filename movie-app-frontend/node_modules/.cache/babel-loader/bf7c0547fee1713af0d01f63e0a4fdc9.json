{"ast":null,"code":"import { SET_USER_TOKEN, SET_USER_RETRIEVE_TOKEN, DELETE_USER_TOKEN, SET_PROFILE, SET_LOGIN_ERROR, SET_SIGN_UP, SET_SIGNUP_ERROR, SET_USER_REFRESH } from \"./ActionTypes\";\nimport axios from \"axios\";\nimport { UserBase } from \"../api/BaseUrl\";\nimport { axiosUserInstance } from \"../api/Interceptors\";\n\nconst setUserToken = success => {\n  return {\n    type: SET_USER_TOKEN,\n    token\n  };\n};\n\nconst setUserRetrieveToken = token => {\n  return {\n    type: SET_USER_RETRIEVE_TOKEN,\n    token\n  };\n};\n\nconst deleteUserToken = () => {\n  return {\n    type: DELETE_USER_TOKEN\n  };\n};\n\nconst setProfile = user => {\n  return {\n    type: SET_PROFILE,\n    payload: user\n  };\n};\n\nconst refreshProfile = () => {\n  return {\n    type: SET_USER_REFRESH\n  };\n};\n\nconst setLoginError = error => {\n  return {\n    type: SET_LOGIN_ERROR,\n    payload: error\n  };\n};\n\nconst setSignUpError = error => {\n  return {\n    type: SET_SIGNUP_ERROR,\n    payload: error\n  };\n};\n\nconst setSignUp = success => {\n  return {\n    type: SET_SIGN_UP,\n    payload: success\n  };\n};\n\nconst loginUser = user => {\n  return dispatch => {\n    axios.post(`${UserBase}/login`, user).then(token => {\n      sessionStorage.setItem(\"usersToken\", token.data.accessToken);\n      console.log(\"message : \", token.data.message);\n      dispatch(setUserToken(token.data));\n    }).catch(err => {\n      dispatch(setLoginError(err.response.data.errorMessage));\n    });\n  };\n};\n\nconst signUpUser = user => {\n  return dispatch => {\n    axios.post(`${UserBase}/signup`, user).then(user => {\n      console.log(\"success signed up : \", user.data.message);\n      dispatch(setSignUp(user.data.message));\n    }).catch(err => {\n      dispatch(setSignUpError(err.response.data.errorMessage));\n    });\n  };\n};\n\nconst retrieveUserToken = () => {\n  return (dispatch, getState) => {\n    const token = getState().user.userToken;\n\n    if (token) {\n      dispatch(setUserRetrieveToken(token));\n    }\n  };\n};\n\nconst viewProfile = userId => {\n  return dispatch => {\n    axiosUserInstance({\n      url: `users/my-profile/${userId}`,\n      method: \"get\"\n    }).then(user => {\n      dispatch(setProfile(user.data.user));\n    }).catch(err => console.log(err));\n  };\n};\n\nconst updateProfile = (userDetails, userId) => {\n  return dispatch => {\n    axiosUserInstance({\n      url: `users/${userId}`,\n      method: \"put\",\n      data: userDetails\n    }).then(() => {\n      dispatch(setProfile(userDetails));\n    }).catch(err => console.log(\"error : \", err));\n  };\n};\n\nexport { loginUser, retrieveUserToken, deleteUserToken, viewProfile, updateProfile, signUpUser };","map":{"version":3,"names":["SET_USER_TOKEN","SET_USER_RETRIEVE_TOKEN","DELETE_USER_TOKEN","SET_PROFILE","SET_LOGIN_ERROR","SET_SIGN_UP","SET_SIGNUP_ERROR","SET_USER_REFRESH","axios","UserBase","axiosUserInstance","setUserToken","success","type","token","setUserRetrieveToken","deleteUserToken","setProfile","user","payload","refreshProfile","setLoginError","error","setSignUpError","setSignUp","loginUser","dispatch","post","then","sessionStorage","setItem","data","accessToken","console","log","message","catch","err","response","errorMessage","signUpUser","retrieveUserToken","getState","userToken","viewProfile","userId","url","method","updateProfile","userDetails"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/UserActions.js"],"sourcesContent":["import { SET_USER_TOKEN, SET_USER_RETRIEVE_TOKEN, DELETE_USER_TOKEN, SET_PROFILE, SET_LOGIN_ERROR , SET_SIGN_UP, SET_SIGNUP_ERROR,  SET_USER_REFRESH } from \"./ActionTypes\"\nimport axios from \"axios\"\nimport { UserBase } from \"../api/BaseUrl\"\nimport { axiosUserInstance } from \"../api/Interceptors\"\n\nconst setUserToken = (success) => {\n    return {\n        type : SET_USER_TOKEN,\n        token\n    }\n}\nconst setUserRetrieveToken = (token) => {\n    return {\n        type : SET_USER_RETRIEVE_TOKEN,\n        token\n    }\n}\nconst deleteUserToken = () => {\n    return {\n        type : DELETE_USER_TOKEN\n    }\n}\nconst setProfile = (user) => {\n    return {\n        type : SET_PROFILE,\n        payload : user\n    }\n}\nconst refreshProfile = () => {\n    return {\n        type : SET_USER_REFRESH\n    }\n}\nconst setLoginError = (error) => {\n    return {\n        type : SET_LOGIN_ERROR,\n        payload : error\n    }\n}\nconst setSignUpError = (error) => {\n    return {\n        type : SET_SIGNUP_ERROR,\n        payload : error\n    }\n}\nconst setSignUp = (success) => {\n    return {\n        type : SET_SIGN_UP,\n        payload : success\n    }\n}\nconst loginUser = (user) => {\n    return (dispatch) => {\n        axios.post(`${UserBase}/login`,user)\n        .then( token => {\n            sessionStorage.setItem(\"usersToken\", token.data.accessToken)\n            console.log(\"message : \",token.data.message)\n            dispatch(setUserToken(token.data))\n        })\n        .catch( err => {\n            dispatch(setLoginError(err.response.data.errorMessage))\n        })\n    }\n}\nconst signUpUser = (user) => {\n    return(dispatch) => {\n        axios.post(`${UserBase}/signup`,user)\n        .then((user) => {\n        console.log(\"success signed up : \",user.data.message)\n        dispatch(setSignUp(user.data.message))\n        })\n        .catch( err => {\n        dispatch(setSignUpError(err.response.data.errorMessage))\n         })\n    }\n}\nconst retrieveUserToken = () => {\n    return(dispatch, getState) => {\n        const token = getState().user.userToken\n        if(token){\n            dispatch(setUserRetrieveToken(token))\n        } \n    }\n}\nconst viewProfile = (userId) => {\n    return(dispatch) => {\n        axiosUserInstance({\n            url: `users/my-profile/${userId}`,\n            method: \"get\"\n        })\n        .then((user) => {\n            dispatch(setProfile(user.data.user))\n        })\n        .catch( err => console.log(err) )\n    }\n}\nconst updateProfile = (userDetails,userId) => {\n    return (dispatch) => {\n        axiosUserInstance({\n            url: `users/${userId}`,\n            method: \"put\",\n            data : userDetails\n        })\n        .then(() => { \n            dispatch(setProfile(userDetails))\n        })\n        .catch( err => console.log(\"error : \",err))\n    }\n}\n\nexport {\n    loginUser,\n    retrieveUserToken,\n    deleteUserToken,\n    viewProfile,\n    updateProfile,\n    signUpUser\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}