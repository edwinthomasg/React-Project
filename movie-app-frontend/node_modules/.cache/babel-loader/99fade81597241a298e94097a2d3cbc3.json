{"ast":null,"code":"import { SET_SIGNUP, SET_SIGNOUT, TOGGLE_SIGNUP, SET_ADMIN_LOGIN, SET_ADMIN_LOGOUT, SET_USER_TOKEN, SET_RETRIEVE_TOKEN, DELETE_USER_TOKEN, SET_ADMIN_TOKEN } from \"./authTypes\";\nimport axios from 'axios';\n\nconst setSignUp = () => {\n  return {\n    type: SET_SIGNUP\n  };\n};\n\nconst setSignOut = () => {\n  return {\n    type: SET_SIGNOUT\n  };\n};\n\nconst toggleSignup = () => {\n  return {\n    type: TOGGLE_SIGNUP\n  };\n};\n\nconst setAdminLogin = () => {\n  return {\n    type: SET_ADMIN_LOGIN\n  };\n};\n\nconst setAdminLogout = () => {\n  return {\n    type: SET_ADMIN_LOGOUT\n  };\n};\n\nconst setUserToken = token => {\n  return {\n    type: SET_USER_TOKEN,\n    token\n  };\n};\n\nconst setRetrieveToken = token => {\n  return {\n    type: SET_RETRIEVE_TOKEN,\n    token\n  };\n};\n\nconst deleteUserToken = () => {\n  return {\n    type: DELETE_USER_TOKEN\n  };\n};\n\nconst setAdminToken = token => {\n  return {\n    type: SET_ADMIN_TOKEN,\n    token\n  };\n};\n\nconst storeUserToken = function (user) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'login';\n  return (dispatch, getState) => {\n    axios.post(`http://localhost:3040/users/${type}`, user).then(token => {\n      if (type === 'login') {\n        localStorage.setItem(\"usersToken\", token.data.accessToken);\n        dispatch(setUserToken(token.data.accessToken));\n      }\n    }).catch(err => console.log(err.response.data, err.response.status));\n  };\n};\n\nconst storeAdminToken = admin => {\n  return dispatch => {\n    axios.post(`http://localhost:3040/admin/login`, admin).then(token => {\n      localStorage.setItem(\"adminsToken\", token.data.accessToken);\n      dispatch(setAdminToken(token.data.accessToken));\n    }).catch(err => console.log(err.response.data, err.response.status));\n  };\n};\n\nconst retrieveUserToken = () => {\n  return (dispatch, getState) => {\n    const token = getState().tokener.token;\n\n    if (token) {\n      dispatch(setUserRetrieveToken(token));\n    }\n  };\n}; // const retrieveAdminToken = () => {\n//     return(dispatch, getState) => {\n//         const token = getState().tokener.token\n//         if(token){\n//             dispatch(setRetrieveToken(token))\n//         } \n//     }\n// }\n\n\nexport { setSignUp, setSignOut, toggleSignup, setAdminLogin, setAdminLogout, storeUserToken, retrieveUserToken, deleteUserToken, storeAdminToken };","map":{"version":3,"names":["SET_SIGNUP","SET_SIGNOUT","TOGGLE_SIGNUP","SET_ADMIN_LOGIN","SET_ADMIN_LOGOUT","SET_USER_TOKEN","SET_RETRIEVE_TOKEN","DELETE_USER_TOKEN","SET_ADMIN_TOKEN","axios","setSignUp","type","setSignOut","toggleSignup","setAdminLogin","setAdminLogout","setUserToken","token","setRetrieveToken","deleteUserToken","setAdminToken","storeUserToken","user","dispatch","getState","post","then","localStorage","setItem","data","accessToken","catch","err","console","log","response","status","storeAdminToken","admin","retrieveUserToken","tokener","setUserRetrieveToken"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/authActions.js"],"sourcesContent":["import { SET_SIGNUP, SET_SIGNOUT, TOGGLE_SIGNUP, SET_ADMIN_LOGIN, SET_ADMIN_LOGOUT, SET_USER_TOKEN, SET_RETRIEVE_TOKEN, DELETE_USER_TOKEN, SET_ADMIN_TOKEN } from \"./authTypes\"\nimport axios from 'axios'\n\nconst setSignUp = () => {\n    return {\n        type : SET_SIGNUP\n    }\n}\nconst setSignOut = () => {\n    return {\n        type : SET_SIGNOUT\n    }\n}\nconst toggleSignup = () => {\n    return {\n        type : TOGGLE_SIGNUP\n    }\n}\nconst setAdminLogin = () => {\n    return {\n        type : SET_ADMIN_LOGIN\n    }\n} \nconst setAdminLogout = () => {\n    return {\n        type : SET_ADMIN_LOGOUT\n    }\n} \nconst setUserToken = (token) => {\n    return {\n        type : SET_USER_TOKEN,\n        token\n    }\n}\nconst setRetrieveToken = (token) => {\n    return {\n        type : SET_RETRIEVE_TOKEN,\n        token\n    }\n}\nconst deleteUserToken = () => {\n    return {\n        type : DELETE_USER_TOKEN\n    }\n}\nconst setAdminToken = (token) => {\n    return {\n        type : SET_ADMIN_TOKEN,\n        token\n    }\n}\nconst storeUserToken = (user, type = 'login') => {\n    return(dispatch,getState) => {\n        axios.post(`http://localhost:3040/users/${type}`,user)\n        .then( token => {\n            if(type === 'login')\n            {\n            localStorage.setItem(\"usersToken\", token.data.accessToken)\n            dispatch(setUserToken(token.data.accessToken))\n            }\n        })\n        .catch( err => console.log(err.response.data,err.response.status))\n    }\n}\nconst storeAdminToken = (admin) => {\n    return(dispatch) => {\n        axios.post(`http://localhost:3040/admin/login`,admin)\n        .then( token => {\n            localStorage.setItem(\"adminsToken\", token.data.accessToken)\n            dispatch(setAdminToken(token.data.accessToken))\n        })\n        .catch( err => console.log(err.response.data,err.response.status))\n    }\n}\nconst retrieveUserToken = () => {\n    return(dispatch, getState) => {\n        const token = getState().tokener.token\n        if(token){\n            dispatch(setUserRetrieveToken(token))\n        } \n    }\n}\n// const retrieveAdminToken = () => {\n//     return(dispatch, getState) => {\n//         const token = getState().tokener.token\n//         if(token){\n//             dispatch(setRetrieveToken(token))\n//         } \n//     }\n// }\nexport {\n    setSignUp,\n    setSignOut,\n    toggleSignup,\n    setAdminLogin,\n    setAdminLogout,\n    storeUserToken,\n    retrieveUserToken,\n    deleteUserToken,\n    storeAdminToken\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}