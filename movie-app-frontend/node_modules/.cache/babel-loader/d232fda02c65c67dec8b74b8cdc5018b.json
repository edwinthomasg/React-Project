{"ast":null,"code":"import { SET_USER_TOKEN, SET_USER_RETRIEVE_TOKEN, DELETE_USER_TOKEN, SET_PROFILE, SET_AUTH_ERROR, SET_SIGN_UP, SET_USER_REFRESH, SET_AUTH_SUCCESS, SET_AUTH_FAILED } from \"./ActionTypes\";\nimport axios from \"axios\";\nimport { UserBase } from \"../api/BaseUrl\";\nimport { axiosUserInstance } from \"../api/Interceptors\";\n\nconst setUserToken = token => {\n  return {\n    type: SET_USER_TOKEN,\n    token\n  };\n};\n\nconst setUserRetrieveToken = token => {\n  return {\n    type: SET_USER_RETRIEVE_TOKEN,\n    token\n  };\n};\n\nconst deleteUserToken = () => {\n  return {\n    type: DELETE_USER_TOKEN\n  };\n};\n\nconst setProfile = user => {\n  return {\n    type: SET_PROFILE,\n    payload: user\n  };\n};\n\nconst refreshProfile = () => {\n  return {\n    type: SET_USER_REFRESH\n  };\n};\n\nconst setAuthError = error => {\n  return {\n    type: SET_AUTH_ERROR,\n    payload: error\n  };\n};\n\nconst setLoginSuccess = () => {\n  return {\n    type: SET_AUTH_SUCCESS\n  };\n};\n\nconst setLoginFailed = () => {\n  return {\n    type: SET_AUTH_FAILED\n  };\n};\n\nconst setSignupSuccess = () => {\n  return {\n    t\n  };\n};\n\nconst setSignUp = () => {\n  return {\n    type: SET_SIGN_UP\n  };\n};\n\nconst storeUserToken = function (user) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'login';\n  return dispatch => {\n    axios.post(`${UserBase}/${type}`, user).then(token => {\n      if (type === 'login') {\n        sessionStorage.setItem(\"usersToken\", token.data.accessToken);\n        dispatch(setUserToken(token.data.accessToken));\n        dispatch(setAuthSuccess());\n      } else {\n        dispatch(setSignUp());\n        dispatch(setAuthSuccess());\n      }\n    }).catch(err => {\n      if (err.response.status === 400) {\n        console.log(\"message received from backend : \", err.response.data.errorMessage);\n        dispatch(setAuthError(err.response.data.errorMessage));\n      }\n    });\n  };\n};\n\nconst retrieveUserToken = () => {\n  return (dispatch, getState) => {\n    const token = getState().user.userToken;\n\n    if (token) {\n      dispatch(setUserRetrieveToken(token));\n    }\n  };\n};\n\nconst viewProfile = userId => {\n  return dispatch => {\n    axiosUserInstance({\n      url: `users/my-profile/${userId}`,\n      method: \"get\"\n    }).then(user => {\n      dispatch(setProfile(user.data.user));\n    }).catch(err => console.log(err));\n  };\n};\n\nconst updateProfile = (userDetails, userId) => {\n  return dispatch => {\n    axiosUserInstance({\n      url: `users/${userId}`,\n      method: \"put\",\n      data: userDetails\n    }).then(() => {\n      dispatch(setProfile(userDetails));\n    }).catch(err => console.log(\"error : \", err));\n  };\n};\n\nexport { storeUserToken, retrieveUserToken, deleteUserToken, viewProfile, updateProfile };","map":{"version":3,"names":["SET_USER_TOKEN","SET_USER_RETRIEVE_TOKEN","DELETE_USER_TOKEN","SET_PROFILE","SET_AUTH_ERROR","SET_SIGN_UP","SET_USER_REFRESH","SET_AUTH_SUCCESS","SET_AUTH_FAILED","axios","UserBase","axiosUserInstance","setUserToken","token","type","setUserRetrieveToken","deleteUserToken","setProfile","user","payload","refreshProfile","setAuthError","error","setLoginSuccess","setLoginFailed","setSignupSuccess","t","setSignUp","storeUserToken","dispatch","post","then","sessionStorage","setItem","data","accessToken","setAuthSuccess","catch","err","response","status","console","log","errorMessage","retrieveUserToken","getState","userToken","viewProfile","userId","url","method","updateProfile","userDetails"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/redux/UserActions.js"],"sourcesContent":["import { SET_USER_TOKEN, SET_USER_RETRIEVE_TOKEN, DELETE_USER_TOKEN, SET_PROFILE, SET_AUTH_ERROR, SET_SIGN_UP, SET_USER_REFRESH, SET_AUTH_SUCCESS, SET_AUTH_FAILED } from \"./ActionTypes\"\nimport axios from \"axios\"\nimport { UserBase } from \"../api/BaseUrl\"\nimport { axiosUserInstance } from \"../api/Interceptors\"\n\nconst setUserToken = (token) => {\n    return {\n        type : SET_USER_TOKEN,\n        token\n    }\n}\nconst setUserRetrieveToken = (token) => {\n    return {\n        type : SET_USER_RETRIEVE_TOKEN,\n        token\n    }\n}\nconst deleteUserToken = () => {\n    return {\n        type : DELETE_USER_TOKEN\n    }\n}\nconst setProfile = (user) => {\n    return {\n        type : SET_PROFILE,\n        payload : user\n    }\n}\nconst refreshProfile = () => {\n    return {\n        type : SET_USER_REFRESH\n    }\n}\nconst setAuthError = (error) => {\n    return {\n        type : SET_AUTH_ERROR,\n        payload : error\n    }\n}\nconst setLoginSuccess = () => {\n    return {\n        type : SET_AUTH_SUCCESS\n    }\n}\nconst setLoginFailed = () => {\n    return {\n        type : SET_AUTH_FAILED\n    }\n}\nconst setSignupSuccess = () => {\n    return {\n        t\n    }\n}\nconst setSignUp = () => {\n    return {\n        type : SET_SIGN_UP\n    }\n}\nconst storeUserToken = (user, type = 'login') => {\n    return (dispatch) => {\n        axios.post(`${UserBase}/${type}`,user)\n        .then( token => {\n            if(type === 'login')\n            {\n            sessionStorage.setItem(\"usersToken\", token.data.accessToken)\n            dispatch(setUserToken(token.data.accessToken))\n            dispatch(setAuthSuccess())\n            }\n            else\n            {\n                dispatch(setSignUp())\n                dispatch(setAuthSuccess())\n            }\n        })\n        .catch( err => {\n            if(err.response.status === 400)\n            {\n                console.log(\"message received from backend : \",err.response.data.errorMessage)\n                dispatch(setAuthError(err.response.data.errorMessage))\n            }\n        })\n    }\n}\nconst retrieveUserToken = () => {\n    return(dispatch, getState) => {\n        const token = getState().user.userToken\n        if(token){\n            dispatch(setUserRetrieveToken(token))\n        } \n    }\n}\nconst viewProfile = (userId) => {\n    return(dispatch) => {\n        axiosUserInstance({\n            url: `users/my-profile/${userId}`,\n            method: \"get\"\n        })\n        .then((user) => {\n            dispatch(setProfile(user.data.user))\n        })\n        .catch( err => console.log(err) )\n    }\n}\nconst updateProfile = (userDetails,userId) => {\n    return (dispatch) => {\n        axiosUserInstance({\n            url: `users/${userId}`,\n            method: \"put\",\n            data : userDetails\n        })\n        .then(() => { \n            dispatch(setProfile(userDetails))\n        })\n        .catch( err => console.log(\"error : \",err))\n    }\n}\n\nexport {\n    storeUserToken,\n    retrieveUserToken,\n    deleteUserToken,\n    viewProfile,\n    updateProfile\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}