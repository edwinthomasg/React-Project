{"ast":null,"code":"var _jsxFileName = \"/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminLogin.js\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useStyles } from '../../styles/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { storeAdminToken } from '../redux/AdminActions';\nimport { useForm } from 'react-hook-form';\nimport '../../styles/Style.css';\nimport ReactJsAlert from 'reactjs-alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminLogin = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    watch,\n    reset\n  } = useForm({\n    mode: 'onChange'\n  });\n  const [status, setStatus] = useState(false);\n  const [type, setType] = useState('');\n  const [title, setTitle] = useState('');\n  const {\n    adminLoginMessage,\n    adminLoginSuccess\n  } = useSelector(state => state.admin);\n  useEffect(() => {\n    if (adminLoginSuccess) {\n      setStatus(true);\n      setType('success');\n      setTitle(adminLoginMessage);\n    }\n  }, [adminLoginSuccess, adminLoginMessage]);\n\n  const submitHandler = adminData => {\n    dispatch(storeAdminToken(adminData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submitHandler),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.loginForm,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          padding: 1,\n          variant: \"h4\",\n          textAlign: \"center\",\n          children: \"Admin Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register('adminEmail', {\n            required: 'Email required',\n            pattern: {\n              value: /^([a-z]+[\\.-\\d]*)@([a-z-]+)\\.([a-z\\-]{2,8})(\\.[a-z]{2,8})?$/,\n              message: 'Invalid email format'\n            }\n          }),\n          type: 'email',\n          className: \"input-credential\",\n          placeholder: \"EmailID\",\n          margin: \"normal\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), errors.adminEmail && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"credential-error\",\n          children: errors.adminEmail.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(TextField, { ...register('adminPassword', {\n            required: 'Password required',\n            pattern: {\n              value: /^[a-zA-Z0-9]{8,20}$/,\n              message: 'Password should contain atleast 8 characters'\n            }\n          }),\n          type: 'password',\n          className: \"input-credential\",\n          placeholder: \"Password\",\n          margin: \"normal\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), errors.adminPassword && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"credential-error\",\n          children: errors.adminPassword.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"warning\",\n          style: {\n            margin: '5% 0'\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactJsAlert, {\n      status: status,\n      type: type,\n      title: title,\n      Close: status => {\n        if (loginMessage) {\n          setStatus(false);\n          navigate('/admin/home', {\n            replace: true\n          });\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AdminLogin, \"LenRtxK7SeE95eWhVf0BEj6uYbY=\", false, function () {\n  return [useNavigate, useDispatch, useStyles, useForm, useSelector];\n});\n\n_c = AdminLogin;\nexport default AdminLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["Button","TextField","Typography","Box","React","useState","useNavigate","useStyles","useSelector","useDispatch","storeAdminToken","useForm","ReactJsAlert","AdminLogin","navigate","dispatch","classes","register","handleSubmit","formState","errors","watch","reset","mode","status","setStatus","type","setType","title","setTitle","adminLoginMessage","adminLoginSuccess","state","admin","useEffect","submitHandler","adminData","loginForm","required","pattern","value","message","adminEmail","adminPassword","margin","loginMessage","replace"],"sources":["/home/asplap2005/Documents/React-Project/movie-app-frontend/src/components/admin/AdminLogin.js"],"sourcesContent":["import { Button, TextField, Typography } from '@mui/material'\nimport { Box } from '@mui/system'\nimport React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useStyles } from '../../styles/styles'\nimport { useSelector ,useDispatch } from 'react-redux'\nimport { storeAdminToken } from '../redux/AdminActions'\nimport { useForm } from 'react-hook-form'\nimport '../../styles/Style.css'\nimport ReactJsAlert from 'reactjs-alert'\n\nconst AdminLogin = () => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const classes = useStyles()\n    const { register, handleSubmit, formState : {errors}, watch , reset} = useForm({\n      mode : 'onChange'\n    })\n    const [status, setStatus] = useState(false)\n    const [type, setType] = useState('')\n    const [title, setTitle] = useState('')\n    const { adminLoginMessage, adminLoginSuccess } = useSelector( state => state.admin )\n    \n    useEffect( () => {\n      if(adminLoginSuccess)\n      {\n        setStatus(true)\n        setType('success')\n        setTitle(adminLoginMessage)\n      }\n    },[adminLoginSuccess, adminLoginMessage])\n    const submitHandler = (adminData) => {\n      dispatch(storeAdminToken(adminData))\n    }\n    return(<>\n      <form  onSubmit={ handleSubmit(submitHandler) }>\n        <Box className = {classes.loginForm}>\n          <Typography padding={1} variant='h4' textAlign=\"center\">\n           Admin Login\n          </Typography>\n          <TextField {...register('adminEmail',{ required : 'Email required',\n           pattern : {\n             value : /^([a-z]+[\\.-\\d]*)@([a-z-]+)\\.([a-z\\-]{2,8})(\\.[a-z]{2,8})?$/,\n             message : 'Invalid email format'\n           }\n          })} type={'email'} className='input-credential' placeholder='EmailID' margin='normal' required/>\n          { errors.adminEmail && <small className='credential-error'>{errors.adminEmail.message}</small>}\n          <TextField {...register('adminPassword',{ required : 'Password required',\n           pattern : {\n            value : /^[a-zA-Z0-9]{8,20}$/,\n            message : 'Password should contain atleast 8 characters'\n           }\n          })} type={'password'} className='input-credential' placeholder='Password' margin='normal' required/>\n          { errors.adminPassword && <small className='credential-error'>{errors.adminPassword.message}</small>}\n          <Button type='submit' variant='contained' color='warning' style={{margin : '5% 0'}}>Login</Button>\n        </Box>\n      </form>\n      <ReactJsAlert\n      status = {status}\n      type = {type}\n      title = {title}\n      Close = {(status) => {\n        if(loginMessage)\n        {\n          setStatus(false)\n          navigate('/admin/home',{replace:true})\n        }\n      }}\n      />\n    </>)\n }\n\n export default AdminLogin"],"mappings":"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"},"metadata":{},"sourceType":"module"}